[
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "",
    "text": "Course Title: Short Course on R Tools\nMeeting Time: TuTh 2:00pm - 3:15pm\nLocation: Microsoft Teams\nWebsite: https://bit.ly/SCoRT",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-information",
    "href": "course-syllabus.html#course-information",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "",
    "text": "Course Title: Short Course on R Tools\nMeeting Time: TuTh 2:00pm - 3:15pm\nLocation: Microsoft Teams\nWebsite: https://bit.ly/SCoRT",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#instructors-details",
    "href": "course-syllabus.html#instructors-details",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Instructors Details",
    "text": "Instructors Details\n\nName: Mehdi Maadooliat, and Hossein Haghbin\nOffice Hours: Tu & Th 12:15 - 1:30pm or by e-mail",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-description",
    "href": "course-syllabus.html#course-description",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Course Description",
    "text": "Course Description\nA modern course in probability. Foundations of probability for modeling random processes with computational techniques. Topics include counting techniques, probability of events, random variables, distribution functions, probability functions, probability density functions, expectation, moments, moment generating functions, special discrete and continuous distributions, sampling distributions, transformation of variables, prior and posterior distributions, Law of Large Numbers, Central Limit Theorem, the Bayesian paradigm. Numerical and computational methods will be covered throughout topics.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#learning-outcomes",
    "href": "course-syllabus.html#learning-outcomes",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of the course, students will:\n\nUnderstand and Apply Fundamental Probability Concepts\nAnalyze and Model Random Processes\nPerform Variable Transformations\nImplement Computational Techniques\nInterpret Statistical Theorems\nCritically Evaluate Probabilistic Models\nCommunicate Probabilistic Findings",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#prerequisites",
    "href": "course-syllabus.html#prerequisites",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nThree semesters of mathematics beyond calculus and MATH 4720 or equiv.\nPreferable knowledge is MSSC 5700 and MSSC 5710.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#textbooks",
    "href": "course-syllabus.html#textbooks",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Textbooks",
    "text": "Textbooks\n\nProbability and Statistics with R, 2nd edition by Maria Dolores Ugarte, Ana F. Militino, Alan T. Arnholt, 2016. ISBN: 9781466504394.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#grading-breakdown",
    "href": "course-syllabus.html#grading-breakdown",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Grading Breakdown",
    "text": "Grading Breakdown\n\nHomework: 30%\nProject: 10%\nMidterm Exam: 30%\nFinal Exam: 30%\n\n\nGrading Scale\n\n\n\nGrade\nRange\n\n\n\n\nA\n93.5 - 100%\n\n\nA-\n90- 93.49%\n\n\nB+\n86.5 - 89.99%\n\n\nB\n83.5 - 86.49%\n\n\nB-\n80 - 83.49%\n\n\nC+\n76.5 - 79.99%\n\n\nC\n73.5 - 76.49%\n\n\nC-\n70 - 73.49%\n\n\nD+\n66.5 - 69.99%\n\n\nD\n60 - 66.49%\n\n\nF\n&lt; 59.99%",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#exams",
    "href": "course-syllabus.html#exams",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Exams",
    "text": "Exams\nTentatively, there will be a midterm (in class) on Oct. 23rd, plus the final (in class or take home): Dec. 8th from 10:30 - 12:30pm.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#homework",
    "href": "course-syllabus.html#homework",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Homework",
    "text": "Homework\nHomework is required so that you get a better understanding of the material covered, plus it will help you to keep up. You will get a better understanding of the material if you discuss it with someone. However, you must submit YOUR OWN work to D2L website. Assignments are mostly due at 11:50pm (check for due dates in D2L).\nNO LATE HOMEWORK WILL BE ACCEPTED NOR WILL YOU BE ALLOWED TO MAKE UP MISSED HOMEWORK! Plan accordingly! It is better to submit something, even if it is incomplete. You need to type your homework (preferably using LaTeX, or Quarto) and submit it as a PDF file. Scanned homework will be graded out of 80. Low quality scanned homework will be considered as NO submission.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#make-up-policy",
    "href": "course-syllabus.html#make-up-policy",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Make-up Policy",
    "text": "Make-up Policy\nThere will not be any make-up exam or homework unless there is an emergency.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#attendance",
    "href": "course-syllabus.html#attendance",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Attendance",
    "text": "Attendance\nAttendance is required and subject to the College of Arts and Sciences policy.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#academic-honesty",
    "href": "course-syllabus.html#academic-honesty",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Academic Honesty",
    "text": "Academic Honesty\nStudents are expected to follow the University’s policy on academic honesty as outlined in the Bulletin.\nTL;DR: Don’t cheat!\nPlease abide by the following as you work on assignments in this course:\n\nCollaboration: Only work that is clearly assigned as team work should be completed collaboratively.\n\nThe homework assignments must also be completed individually and you are welcomed to discuss the assignment with classmates at a high level (e.g., discuss what’s the best way for approaching a problem, what functions are useful for accomplishing a particular task, etc.). However you may not directly share answers to questions (including any code) with anyone other than myself.\nFor the projects, collaboration within teams is not only allowed, but expected. Communication between teams at a high level is also allowed however you may not share code or components of the project across teams.\nOn individual assignments you may not directly share code with another student in this class, and on team assignments you may not directly share code with another team in this class.\n\nOnline resources: I am well aware that a huge volume of code is available on the web to solve any number of problems. Unless I explicitly tell you not to use something, the course’s policy is that you may make use of any online resources (e.g., StackOverflow) but you must explicitly cite where you obtained any code you directly use (or use as inspiration). Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nUse of generative artificial intelligence (AI): You should treat generative AI, such as ChatGPT, the same as other online resources. There are two guiding principles that govern how you can use AI in this course:1 (1) Cognitive dimension: Working with AI should not reduce your ability to think clearly. We will practice using AI to facilitate—rather than hinder—learning. (2) Ethical dimension: Students using AI should be transparent about their use and make sure it aligns with academic integrity.\n\n✅ AI tools for code: You may make use of the technology for coding examples on assignments; if you do so, you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism. You may use these guidelines for citing AI-generated content.\n❌ AI tools for narrative: Unless instructed otherwise, you may not use generative AI to write narrative on assignments. In general, you may use generative AI as a resource as you complete assignments but not to answer the exercises for you.\n\nYou are ultimately responsible for the work you turn in; it should reflect your understanding of the course content.\n\nIf you are unsure if the use of a particular resource complies with the academic honesty policy, please ask the instructor.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Important dates",
    "text": "Important dates\n\nMonday, August 25: Classes begin\nTuesday, September 2: Drop/add ends\nThursday - Friday, October 16 - 17: Fall Break\nFriday, November 14: Last day to withdraw with W\nThursday - Monday, November 26 - 30: Thanksgiving Holiday\nSaturday, December 6: Classes end\nMonday, December 8, 10:30 am - 12:30 pm: Final Exam\n\nFor more important dates, see the full MU Academic Calendar.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-note",
    "href": "course-syllabus.html#important-note",
    "title": "Syllabus - Short Course on R Tools (SCoRT)",
    "section": "Important Note",
    "text": "Important Note\nThe syllabus may be modified throughout the course. Any substantial modifications will result in a reissued syllabus.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "hands-on/HW1.html",
    "href": "hands-on/HW1.html",
    "title": "Workshop Homework: OOP, Shiny & Rcpp",
    "section": "",
    "text": "Please complete the following tasks within one week and submit as a GitHub repository named knn_workshop_hw.\n\n\n\n\nInverse‑Distance Weights: Modify your knn_s3 implementation to support a weight = c(\"uniform\", \"inverse\") argument. When inverse, use weights proportional to 1/distance, normalized to sum to 1.\nUnit Tests: Write testthat tests verifying both weighting schemes, and that uniform results match when distances are equal.\nDocumentation: Add roxygen comments for the new argument and regenerate help files with devtools::document().\n\n\n\n\n\n\nDynamic Predictors: In the k‑NN app, add a multi‑select input to choose predictor variables at runtime.\nNearest‑Neighbor Table: Display the indices and distances of the k nearest neighbors for the first test observation in a table.\nDownload Button: Enable downloading the test‑set predictions as a CSV file.\nInput Validation: Disable or warn if no predictors are selected.\n\n\n\n\n\n\nBenchmark Script: Create benchmark_knn_dims.R to measure runtimes for pure‑R vs Rcpp across combinations of sample size \\(n\\in\\{500,1000,2000\\}\\) and feature count \\(p\\in\\{3,5,10\\}\\). Plot a heatmap of speed‑up ratios.\nC++ Optimization: Modify knn_pred.cpp to use std::partial_sort instead of std::nth_element, re‑benchmark, and report any differences.\nSummary Report: Produce a one‑page PDF summarizing your benchmarks, code changes, and recommendations.\n\n\n\n\n\nYour GitHub repository knn_workshop_hw should include:\nknn_workshop_hw/\n├── R/           # R scripts and tests\n├── app/         # Shiny app files\n├── src/         # C++ source for Rcpp\n├── benchmark_knn_dims.R\n├── report.pdf   # summary of benchmarks and findings\n└── README.md    # overview and instructions\nInclude a README with setup instructions and a sample run of each component.\n\nGood luck, and feel free to reach out with questions!",
    "crumbs": [
      "Hands-on / HW",
      "First Week HW"
    ]
  },
  {
    "objectID": "hands-on/HW1.html#extend-the-knn-s3-class-30-pts",
    "href": "hands-on/HW1.html#extend-the-knn-s3-class-30-pts",
    "title": "Workshop Homework: OOP, Shiny & Rcpp",
    "section": "",
    "text": "Inverse‑Distance Weights: Modify your knn_s3 implementation to support a weight = c(\"uniform\", \"inverse\") argument. When inverse, use weights proportional to 1/distance, normalized to sum to 1.\nUnit Tests: Write testthat tests verifying both weighting schemes, and that uniform results match when distances are equal.\nDocumentation: Add roxygen comments for the new argument and regenerate help files with devtools::document().",
    "crumbs": [
      "Hands-on / HW",
      "First Week HW"
    ]
  },
  {
    "objectID": "hands-on/HW1.html#shiny-app-enhancement-30-pts",
    "href": "hands-on/HW1.html#shiny-app-enhancement-30-pts",
    "title": "Workshop Homework: OOP, Shiny & Rcpp",
    "section": "",
    "text": "Dynamic Predictors: In the k‑NN app, add a multi‑select input to choose predictor variables at runtime.\nNearest‑Neighbor Table: Display the indices and distances of the k nearest neighbors for the first test observation in a table.\nDownload Button: Enable downloading the test‑set predictions as a CSV file.\nInput Validation: Disable or warn if no predictors are selected.",
    "crumbs": [
      "Hands-on / HW",
      "First Week HW"
    ]
  },
  {
    "objectID": "hands-on/HW1.html#rcpp-performance-study-30-pts",
    "href": "hands-on/HW1.html#rcpp-performance-study-30-pts",
    "title": "Workshop Homework: OOP, Shiny & Rcpp",
    "section": "",
    "text": "Benchmark Script: Create benchmark_knn_dims.R to measure runtimes for pure‑R vs Rcpp across combinations of sample size \\(n\\in\\{500,1000,2000\\}\\) and feature count \\(p\\in\\{3,5,10\\}\\). Plot a heatmap of speed‑up ratios.\nC++ Optimization: Modify knn_pred.cpp to use std::partial_sort instead of std::nth_element, re‑benchmark, and report any differences.\nSummary Report: Produce a one‑page PDF summarizing your benchmarks, code changes, and recommendations.",
    "crumbs": [
      "Hands-on / HW",
      "First Week HW"
    ]
  },
  {
    "objectID": "hands-on/HW1.html#deliverables",
    "href": "hands-on/HW1.html#deliverables",
    "title": "Workshop Homework: OOP, Shiny & Rcpp",
    "section": "",
    "text": "Your GitHub repository knn_workshop_hw should include:\nknn_workshop_hw/\n├── R/           # R scripts and tests\n├── app/         # Shiny app files\n├── src/         # C++ source for Rcpp\n├── benchmark_knn_dims.R\n├── report.pdf   # summary of benchmarks and findings\n└── README.md    # overview and instructions\nInclude a README with setup instructions and a sample run of each component.\n\nGood luck, and feel free to reach out with questions!",
    "crumbs": [
      "Hands-on / HW",
      "First Week HW"
    ]
  },
  {
    "objectID": "hands-on/HO3.html",
    "href": "hands-on/HO3.html",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "",
    "text": "In this 30 min session you will:\n\nDownload and inspect the C++ implementation for k‑NN.\nCompile and load the Rcpp code.\nRun benchmarks comparing pure-R vs Rcpp predictions.\nAnalyze how sample size and dimensionality affect performance.",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#overview",
    "href": "hands-on/HO3.html#overview",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "",
    "text": "In this 30 min session you will:\n\nDownload and inspect the C++ implementation for k‑NN.\nCompile and load the Rcpp code.\nRun benchmarks comparing pure-R vs Rcpp predictions.\nAnalyze how sample size and dimensionality affect performance.",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#setup",
    "href": "hands-on/HO3.html#setup",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "Setup",
    "text": "Setup\nDownload the C++ and helper scripts into your working directory:\ncurl -O https://raw.githubusercontent.com/mmadoliat/WSoRT/refs/heads/main/src/knn_pred.cpp\ncurl -O https://raw.githubusercontent.com/mmadoliat/WSoRT/refs/heads/main/runthis.R\nOpen the files in your editor to review the code:\n\nknn_pred.cpp contains the knn_pred_cpp() function (Rcpp).\nrunthis.R sources both R and C++ implementations and runs microbenchmark().",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#compile-the-c-code",
    "href": "hands-on/HO3.html#compile-the-c-code",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "1. Compile the C++ code",
    "text": "1. Compile the C++ code\nIn an R console or RStudio, run:\nRcpp::sourceCpp(\"knn_pred.cpp\")\nIf successful, you should see knn_pred_cpp available:\nls(\"package:base\") # confirm knn_pred_cpp is loaded\n# [1] \"knn_pred_cpp\"",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#inspect-the-runner-script",
    "href": "hands-on/HO3.html#inspect-the-runner-script",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "2. Inspect the runner script",
    "text": "2. Inspect the runner script\nOpen runthis.R, which contains:\nsource(\"R/knn_s3_formula.R\")  # loads knn_s3 and predict()\nsource(\"knn_pred.cpp\")        # loads Rcpp function\n\n# Simulate data and benchmark\ndata &lt;- simulate_knn_data(n = 1000, p = 5, m = 200, k = 10)\nmb &lt;- microbenchmark::microbenchmark(\n  Rcpp = knn_pred_cpp(data$train_x, data$train_y, data$test_x, data$k),\n  R    = knn_pred_R(data$train_x, data$train_y, data$test_x, data$k),\n  times = 20\n)\nprint(mb)\nTry running this script:\nsource(\"runthis.R\")",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#vary-parameters",
    "href": "hands-on/HO3.html#vary-parameters",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "3. Vary parameters",
    "text": "3. Vary parameters\nModify runthis.R or re-run interactively to examine different settings:\n\nIncrease n (training size) from 1000 to 5000 or 10000.\nIncrease p (dimensions) from 5 to 20 or 50.\nObserve how the Rcpp version scales relative to pure-R.\n\nFocus on how the Rcpp implementation stays much faster as complexity grows.",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#discussion",
    "href": "hands-on/HO3.html#discussion",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "4. Discussion",
    "text": "4. Discussion\n\nWhere does Rcpp help most?\nAre there settings where pure R is sufficient?\nHow might you further optimize (e.g., using STL partial_sort)?",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "hands-on/HO3.html#next-steps",
    "href": "hands-on/HO3.html#next-steps",
    "title": "Hands-on: Accelerating k-NN with Rcpp",
    "section": "Next steps",
    "text": "Next steps\n\nTry integrating this into your knn_s3 class and Shiny app.\nExplore parallel Rcpp implementations (OpenMP).\nConsider other statistical routines with nested loops.",
    "crumbs": [
      "Hands-on / HW",
      "RCpp"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Short Course on R Tools - (SCoRT)",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the short course. Note that this schedule will be updated as we progress, and the timeline of topics and assignments might be updated throughout the course.\n\n\n\n\n\n\n\nWEEK\nDATE\nTOPIC\nMATERIALS\nCODE\nDUE\n\n\n\n1\nMon, Aug 11\n\n Object-Oriented Programming (OOP) in R\n📚Topic 1  📖OOP\n\n\nR👩‍💻 R🛠️\n\n\n\n\n\nTue, Aug 12\n\n Create dynamic Shiny web applications\n📚Topic 2  📖Shiny\n\n\nR👩‍💻 R🛠️\n\n\n\n\n\nWed, Aug 13\n\nEnhance performance with Rcpp (C++)\n📚Topic 3  📖Rcpp for everyone\n\n\nR👩‍💻 R🛠️\n\n\n\n\n\nFri, Aug 15\n\n\n\n📝 HW 1 at 11:50 pm\n\n\n2\nMon, Aug 18\n\n Integrate Python in R using Reticulate\n📚Topic 4(🖥️ref)  📖Calling Python from R\n\nR👩‍💻  R🛠️\n\n\n\n\nTue, Aug 19\n\n Develop your own professional R package\n📚Topic 5(🖥️ref)  📖R package\n\nR👩‍💻  R🛠️\n\n\n\n\nWed, Aug 20\n\n Collaborate via GitHub / CRAN submission process\n📚Topic 6(🖥️ref)  📖Let’s Git started  📖Release R package\n\nR👩‍💻  R🛠️\n\n\n\n\nFri, Aug 22\n\n\n\n📝 HW 2 at 11:50 pm\n\n\n3\nTue, Aug 26\n\n Deep Learning in R\n📚Topic 7 (🖥️part II) 📖Deep Learning with R\n\n\nR👩‍💻 R🛠️",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site!"
  },
  {
    "objectID": "slides/Topic6.html#description-namespace",
    "href": "slides/Topic6.html#description-namespace",
    "title": "Short Course on R Tools",
    "section": "DESCRIPTION & NAMESPACE",
    "text": "DESCRIPTION & NAMESPACE\n\nEnsure fields: Version, URL, BugReports, License\nSemantic versioning: increment patch for minor fixes",
    "crumbs": [
      "Slides",
      "GitHub / CRAN submission"
    ]
  },
  {
    "objectID": "slides/Topic6.html#documentation-vignettes",
    "href": "slides/Topic6.html#documentation-vignettes",
    "title": "Short Course on R Tools",
    "section": "Documentation & Vignettes",
    "text": "Documentation & Vignettes\n\nAll help files up to date\nVignettes build without errors",
    "crumbs": [
      "Slides",
      "GitHub / CRAN submission"
    ]
  },
  {
    "objectID": "slides/Topic6.html#tests-coverage",
    "href": "slides/Topic6.html#tests-coverage",
    "title": "Short Course on R Tools",
    "section": "Tests & Coverage",
    "text": "Tests & Coverage\n\ndevtools::test() passes\nConsider covr::report()\n\n??? note Emphasize R CMD check --as-cran equivalence.",
    "crumbs": [
      "Slides",
      "GitHub / CRAN submission"
    ]
  },
  {
    "objectID": "slides/Topic5.html#description",
    "href": "slides/Topic5.html#description",
    "title": "Short Course on R Tools",
    "section": "DESCRIPTION",
    "text": "DESCRIPTION\n\nFields: Package, Version, Title, Description, Author, Depends, Imports, Suggests, License\nSemantic versioning: major.minor.patch",
    "crumbs": [
      "Slides",
      "R package"
    ]
  },
  {
    "objectID": "slides/Topic5.html#namespace",
    "href": "slides/Topic5.html#namespace",
    "title": "Short Course on R Tools",
    "section": "NAMESPACE",
    "text": "NAMESPACE\n\nExport functions: export()\nImport from other packages: importFrom(dplyr, select)\nGenerate with roxygen2 or manually\n\n#' @export\nmy_function &lt;- function(x) x + 1\n??? note Emphasize keeping Imports minimal.",
    "crumbs": [
      "Slides",
      "R package"
    ]
  },
  {
    "objectID": "slides/Topic4_hh.html#managing-python-environments",
    "href": "slides/Topic4_hh.html#managing-python-environments",
    "title": "Short Course on R Tools",
    "section": "Managing Python Environments",
    "text": "Managing Python Environments\n\nVirtualenv:\nvirtualenv_create(\"r-reticulate\")\nvirtualenv_install(\"r-reticulate\", \"numpy\", \"pandas\")\nuse_virtualenv(\"r-reticulate\", required = TRUE)\nConda:\nconda_create(\"r-reticulate\", packages = c(\"numpy\", \"pandas\"))\nuse_condaenv(\"r-reticulate\", required = TRUE)\n\n??? note Emphasize isolating project dependencies."
  },
  {
    "objectID": "slides/Topic4_hh.html#using-source_python",
    "href": "slides/Topic4_hh.html#using-source_python",
    "title": "Short Course on R Tools",
    "section": "📥 Using source_python()",
    "text": "📥 Using source_python()\nImports all Python functions and variables into R\n\n\nVariables become directly available in the R global environment\nIdeal for reusable Python functions\n\n\n\n🔍 Example: Consider “script.py” file, includes following Python script:\ny = 2\ndef square(x):\n    return x **2\n\n\n✅ Works directly in R :\nsource_python(\"script.py\")\nsquare(4)   # returns 16\nprint(y) # print 2"
  },
  {
    "objectID": "slides/Topic4_hh.html#using-py_run_file",
    "href": "slides/Topic4_hh.html#using-py_run_file",
    "title": "Short Course on R Tools",
    "section": "📥 Using py_run_file()",
    "text": "📥 Using py_run_file()\nAlso runs the script, but…\n\n\n❌ Does not expose functions/variables directly in R\nVariables and functions are stored in py$\n\n\n\npy_run_file(\"script.py\")\npy$square(4)  # returns 16\nprint(py$y) # print 2"
  },
  {
    "objectID": "slides/Topic4_hh.html#using-py_run_string",
    "href": "slides/Topic4_hh.html#using-py_run_string",
    "title": "Short Course on R Tools",
    "section": "🧩 Using py_run_string()",
    "text": "🧩 Using py_run_string()\n\n\nExecutes the string in the shared Python session\nVariables created in Python are not added to R environment\nAccess Python variables in R using py$\n\n\n\npy_run_string(\"\ndef square(x):\n    return x ** 2\ny = 5\n\")\n\npy$y         # ✅  5\npy$square(4) # ✅ 16"
  },
  {
    "objectID": "slides/Topic4_hh.html#automatic-data-conversion",
    "href": "slides/Topic4_hh.html#automatic-data-conversion",
    "title": "Short Course on R Tools",
    "section": "🔁 Automatic Data Conversion",
    "text": "🔁 Automatic Data Conversion\n\n\n\n\n\n\n\n\n\nR Object Type\nPython Equivalent\nNotes\n\n\n\n\nnumeric, integer\nfloat, int\nScalars or arrays\n\n\nlogical\nbool\nTRUE → True\n\n\ncharacter\nstr or list[str]\nVectorized strings → list\n\n\nvector, matrix\nnumpy.ndarray\nShape preserved\n\n\ndata.frame\npandas.DataFrame\nColumn types preserved\n\n\nlist (named)\ndict\nKeys from names\n\n\nlist (unnamed)\nlist\nSequential list\n\n\nNULL\nNone\n\n\n\nfunction (closure)\nPython callable\nIf inputs/outputs are convertible\n\n\nfunction (builtin)\n❌ PyCapsule\n⚠️ not callable in Python\n\n\nS3/S4/R6 objects\n❌ PyCapsule\n⚠️ Not convertible"
  },
  {
    "objectID": "slides/Topic4_hh.html#accessing-r-objects-from-python",
    "href": "slides/Topic4_hh.html#accessing-r-objects-from-python",
    "title": "Short Course on R Tools",
    "section": "Accessing R Objects from Python",
    "text": "Accessing R Objects from Python\n🔍 Example: Let two following objects have been defined in R global environment:\nx &lt;- c(10, 20, 30)\nf &lt;- function(x) x^2\n\nIn Python we can access to these objects trough r object:\nprint(r.x)      # ✅ [10, 20, 30]\nprint(r.f(3))   # ✅ 9"
  },
  {
    "objectID": "slides/Topic4_hh.html#exporting-r-objects-to-python",
    "href": "slides/Topic4_hh.html#exporting-r-objects-to-python",
    "title": "Short Course on R Tools",
    "section": "Exporting R Objects to Python",
    "text": "Exporting R Objects to Python\nUse py$ assignment. In R:\nx &lt;- c(1, 2, 3)\npy$x &lt;- x        # Exports `x` to Python namespace\nf &lt;- function(n) n^2\npy$f &lt;- f        # Exports R function to Python\n\nNow usable from Python:\nprint(x)     # [1, 2, 3]\nprint(f(5))  # 25"
  },
  {
    "objectID": "slides/Topic4_hh.html#exporting-r-closure-functions-to-python",
    "href": "slides/Topic4_hh.html#exporting-r-closure-functions-to-python",
    "title": "Short Course on R Tools",
    "section": "Exporting R Closure Functions to Python",
    "text": "Exporting R Closure Functions to Python\nA closure in R is simply a user-defined function created with the function() keyword. It’s the most common type of function in R.\n✅ A closure fnction Works directly. In R:\ntypeof(mean) # return \"closure\"\npy$m &lt;- mean\n\nIn Python:\nprint(m([1, 2, 3, 4, 5]))     # Returns 3"
  },
  {
    "objectID": "slides/Topic4_hh.html#exporting-r-builtin-functions-to-python",
    "href": "slides/Topic4_hh.html#exporting-r-builtin-functions-to-python",
    "title": "Short Course on R Tools",
    "section": "Exporting R Builtin Functions to Python",
    "text": "Exporting R Builtin Functions to Python\nBuilt-in functions in R are functions implemented in C (compiled) and embedded directly into the R interpreter.\n⚠️ Builtin function needs wrapping. For example:\ntypeof(exp) # return \"builtin\"\npy$e &lt;- e\n\nIn Python:\nprint(e(1))     \n# ❌ TypeError: 'PyCapsule' object is not callable\n\n\n✅ Solution: Wrap the builtin in a closure\ne &lt;- function(x) exp(x)\npy$e &lt;- e\n\n\nIn Python:\nprint(e(1))  # ✅ Returns 2.718"
  },
  {
    "objectID": "slides/Topic4_hh.html#create-a-python-class-and-use-it-in-r",
    "href": "slides/Topic4_hh.html#create-a-python-class-and-use-it-in-r",
    "title": "Short Course on R Tools",
    "section": "🧩 Create a Python class and use it in R",
    "text": "🧩 Create a Python class and use it in R\nYou can define a Python class (e.g., a neural network in PyTorch) and interact with it from R using reticulate.\n\n🧪 Python File: simple_net.py\nimport torch.nn as nn\n\nclass SimpleNet(nn.Module):\n    def __init__(self, n_input):\n        super().__init__()\n        self.fc = nn.Linear(n_input, 1)\n\n    def forward(self, x):\n        return self.fc(x)"
  },
  {
    "objectID": "slides/Topic4_hh.html#section-1",
    "href": "slides/Topic4_hh.html#section-1",
    "title": "Short Course on R Tools",
    "section": "",
    "text": "🖥️ R Code to Load and Use the Python Clas:\n# Load the class from Python file\nsource_python(\"simple_net.py\")\n\n# Create model instance\nmodel &lt;- SimpleNet(10)\n\n# Create input tensor (5 samples, 10 features)\nx &lt;- torch$randn(c(5L, 10L))\n\n# Forward pass\noutput &lt;- model$forward(x)\nprint(output)"
  },
  {
    "objectID": "slides/Topic3.html#outline",
    "href": "slides/Topic3.html#outline",
    "title": "Short Course on R Tools",
    "section": "Outline",
    "text": "Outline\n\n\nMotivation & Introduction\nGetting Started with evalCpp() & cppFunction()\nUsing sourceCpp()\nData Types & Conversions\nStandard Template Library (STL)\nUsing Rcpp in Packages\nAdvanced Topics & Resources",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#basic-usage-evalcpp",
    "href": "slides/Topic3.html#basic-usage-evalcpp",
    "title": "Short Course on R Tools",
    "section": "Basic Usage: evalCpp()",
    "text": "Basic Usage: evalCpp()\n\nevalCpp() evaluates a single C++ expression. Includes and dependencies can be declared.\nThis allows us to quickly check C++ constructs.\n\nlibrary(Rcpp)\n\nevalCpp(\"2 + 2\")  # simple test\n&gt;# [1] 4\n\nevalCpp(\"std::numeric_limits&lt;double&gt;::max()\")\n&gt;# [1] 1.79769e+308",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#simple-example---using-cppfunction",
    "href": "slides/Topic3.html#simple-example---using-cppfunction",
    "title": "Short Course on R Tools",
    "section": "Simple Example - Using cppFunction()",
    "text": "Simple Example - Using cppFunction()\n\nRcpp Version of ‘is this number odd or even’\n\nRcpp::cppFunction(\"\nbool isOdd_cpp(int num = 10) {\n  bool result = (num % 2 == 1);\n  return result;\n}\")\nc(isOdd_cpp(42L), isOdd_cpp(43L))\n&gt;# [1] FALSE TRUE\n\n\nUse cppFunction() in R console or script\nFast prototyping & testing\nGood for small functions",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#second-example-var1-1",
    "href": "slides/Topic3.html#second-example-var1-1",
    "title": "Short Course on R Tools",
    "section": "Second Example: VAR(1)",
    "text": "Second Example: VAR(1)\nIn R (C++) code, given both the coefficient and error matrices:\n\nrSim &lt;- function(B, E) {\n  X &lt;- matrix(0, nrow(E), ncol(E))\n  for (r in 2:nrow(E)) {\n    X[r, ] = X[r-1, ] %*% B + E[r, ]\n  }\n  return(X)\n}\n\n\nC++ Version:\n\narma::mat cppSim(arma::mat B, arma::mat E) {\n  int m = E.n_rows, n = E.n_cols;\n  arma::mat X(m, n);\n  X.row(0) = arma::zeros&lt;arma::mat&gt;(1, n);\n  for (int r = 1; r &lt; m; r++) {\n    X.row(r) = X.row(r-1) * B + E.row(r);\n  }\n  return X;\n}",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#second-example-var1-2",
    "href": "slides/Topic3.html#second-example-var1-2",
    "title": "Short Course on R Tools",
    "section": "Second Example: VAR(1)",
    "text": "Second Example: VAR(1)\n\nRcpp::cppFunction('arma::mat cppSim(arma::mat B, arma::mat E) {\n  int m = E.n_rows, n = E.n_cols;\n  arma::mat X(m, n);\n  X.row(0) = arma::zeros&lt;arma::mat&gt;(1, n);\n  for (int r = 1; r &lt; m; r++) {\n    X.row(r) = X.row(r-1) * B + E.row(r);\n  }\n  return X;\n}', depends=\"RcppArmadillo\")\n\na &lt;- matrix(c(0.5, 0.1, 0.1, 0.5), nrow = 2)\ne &lt;- matrix(rnorm(10000), ncol = 2)\nrbenchmark::benchmark(cppSim(a, e), rSim(a, e), order=\"relative\")[, 1:4]\n\n&gt;#    test           replications elapsed relative\n&gt;# 1  cppSim(a, e)  100         0.010   1.0\n&gt;# 2  rSim(a, e)    100         0.728  72.8",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#pagerank",
    "href": "slides/Topic3.html#pagerank",
    "title": "Short Course on R Tools",
    "section": "Pagerank",
    "text": "Pagerank\n#remotes::install_github(\"https://github.com/andrie/pagerank.git\")\nsuppressMessages(library(utils))\nlibrary(pagerank)\n\ncran &lt;- \"https://cloud.r-project.org\"\npr &lt;- compute_pagerank(cran)\nround(100 * pr[1:5], 3)\n\n&gt;#   Rcpp    ggplot2     dplyr      MASS   magrittr\n&gt;# 2.744     1.516       1.274    1.122    0.814",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#percentage-of-compiled-packages",
    "href": "slides/Topic3.html#percentage-of-compiled-packages",
    "title": "Short Course on R Tools",
    "section": "Percentage of Compiled Packages",
    "text": "Percentage of Compiled Packages\ndb &lt;- tools::CRAN_package_db()       # added in R 3.4.0\ndb &lt;- db[!duplicated(db[, 1]), ]     # rows: number of packages\n\nnTot &lt;- nrow(db)                     # columns: different attributes\nnRcpp &lt;- length(tools::dependsOnPkgs(\"Rcpp\", recursive = FALSE, installed = db))\nnCompiled &lt;- table(db[, \"NeedsCompilation\"])[[\"yes\"]]\n\npropRcpp &lt;- nRcpp / nCompiled * 100\ndata.frame(tot = nTot, totRcpp = nRcpp, totCompiled = nCompiled,\n           RcppPctOfCompiled = propRcpp)\n\n&gt;#   tot   totRcpp   totCompiled   RcppPctOfCompiled\n&gt;# 1 22501    3053        4981          61.29291",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#using-sourcecpp",
    "href": "slides/Topic3.html#using-sourcecpp",
    "title": "Short Course on R Tools",
    "section": "Using sourceCpp()",
    "text": "Using sourceCpp()\n\n\nSo what just happened?\n\nWe defined a simple C++ function\n\nIt operates on a numeric vector argument\n\nWe ask Rcpp to ‘source it’ for us\n\nBehind the scenes Rcpp creates a wrapper\n\nRcpp then compiles, links, and loads the wrapper\n\nThe function is available in R under its C++ name\n\nBenefits:\n\nEditor support (syntax highlighting)\nEasier debugging & error tracking",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#another-example-timing-r-implementation",
    "href": "slides/Topic3.html#another-example-timing-r-implementation",
    "title": "Short Course on R Tools",
    "section": "Another Example: Timing R Implementation",
    "text": "Another Example: Timing R Implementation\n\nThe R implementation:\n\n\nf &lt;- function(n) {\n  if (n &lt; 2) return(n)\n  return(f(n - 1) + f(n - 2))\n}\n\n\n\nTiming:\n\nlibrary(rbenchmark)\nbenchmark(f(15), f(20), f(25))[, 1:4]\n\n&gt;# test         replications elapsed   relative\n&gt;# 1 f(15)       100          0.06      1.0\n&gt;# 2 f(20)       100          0.75     12.5\n&gt;# 3 f(25)       100          7.92    132.0",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#another-example-c-implementation",
    "href": "slides/Topic3.html#another-example-c-implementation",
    "title": "Short Course on R Tools",
    "section": "Another Example: C++ Implementation",
    "text": "Another Example: C++ Implementation\nint g(int n) {\n  if (n &lt; 2) return(n);\n  return(g(n - 1) + g(n - 2));\n}\n\nRcpp::cppFunction('\n  int g(int n) {\n    if (n &lt; 2) return(n);\n    return(g(n - 1) + g(n - 2)); \n  }')\n\nsapply(0:10, g)  # Using it on first 11 arguments\n\n&gt;# [1] 0 1 1 2 3 5 8 13 21 34 55",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#another-example-comparing-timing",
    "href": "slides/Topic3.html#another-example-comparing-timing",
    "title": "Short Course on R Tools",
    "section": "Another Example: Comparing Timing",
    "text": "Another Example: Comparing Timing\n\nRcpp implementation:\n\n\nRcpp::cppFunction('\n  int g(int n) {\n    if (n &lt; 2) return(n);\n    return(g(n - 1) + g(n - 2)); \n  }')\n\n\n\nTiming:\n\nlibrary(rbenchmark)\nbenchmark(f(25), g(25))[, 1:4]\n\n&gt;#   test      replications elapsed   relative\n&gt;# 1 f(25)      100          8.02     267.333\n&gt;# 2 g(25)      100          0.03       1.000\n\n\n\nA nice gain of a few orders of magnitude.",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#types",
    "href": "slides/Topic3.html#types",
    "title": "Short Course on R Tools",
    "section": "Types",
    "text": "Types\nR Type mapping:\n\nStandard R types (integer, numeric, list, function, … and compound objects) are mapped to corresponding C++ types:\n\nlibrary(Rcpp)\ncppFunction(\"NumericVector logabs(NumericVector x) {\n  return log(abs(x));\n}\")\nlogabs(seq(-5, 5, by = 2))\n&gt;# [1] 1.609438 1.098612 0.000000 0.000000 1.098612 1.609438\n\n\nVectorized C++! Here log(abs()) runs directly on vectors as R would.",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic3.html#stl-type-mapping",
    "href": "slides/Topic3.html#stl-type-mapping",
    "title": "Short Course on R Tools",
    "section": "STL Type Mapping",
    "text": "STL Type Mapping\n\ncode/logabs2.cpp\n\n\n#include &lt;Rcpp.h&gt;\nusing namespace Rcpp;\n\ninline double f(double x) { return ::log(::fabs(x)); }\n\n// [[Rcpp::export]]\nstd::vector&lt;double&gt; logabs2(std::vector&lt;double&gt; x) {\n  std::transform(x.begin(), x.end(), x.begin(), f);\n  return x;\n}\n\nNot vectorized but ‘sweeps’ f() along std::vector&lt;double&gt; via STL std::transform().\n\nlibrary(Rcpp)\nsourceCpp(\"code/logabs2.cpp\")\nlogabs2(seq(-5, 5, by = 2))\n&gt;# [1] 1.609438 1.098612 0.000000 0.000000 1.098612 1.609438",
    "crumbs": [
      "Slides",
      "RCpp"
    ]
  },
  {
    "objectID": "slides/Topic7.html#classical-programming-vs-machine-learning",
    "href": "slides/Topic7.html#classical-programming-vs-machine-learning",
    "title": "Short Course on R Tools",
    "section": "Classical Programming vs Machine Learning",
    "text": "Classical Programming vs Machine Learning\n\nDeep learning is often presented as algorithms that “work like the brain”, that “think” or “understand”.\n\n\n\n\nReality is however quite far from this dream\n\n\n\n\n\nAI: the effort to automate intellectual tasks normally performed by humans.\n\n\n\n\n\n\n\n\nML: Could a computer surprise us? Rather than programmers crafting data-processing rules by hand, could a computer automatically learn these rules by looking at data? \n\n\n\n\n\n\n\n\nArtificial Intelligence\n\n\nMachine learning\n\n\nDeep learning",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#classical-programming-vs-machine-learning-1",
    "href": "slides/Topic7.html#classical-programming-vs-machine-learning-1",
    "title": "Short Course on R Tools",
    "section": "Classical Programming vs Machine Learning",
    "text": "Classical Programming vs Machine Learning\n\nDeep learning is often presented as algorithms that “work like the brain”, that “think” or “understand”.\n\n\n \n\n\n\nAI: the effort to automate intellectual tasks normally performed by humans.\n\n\n\n\n\n\nML: Could a computer surprise us? Rather than programmers crafting data-processing rules by hand, could a computer automatically learn these rules by looking at data? \n\n\n\n\n\n\n\nArtificial Intelligence\n\n\nMachine learning\n\n\nDeep learning",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#recipes-of-a-machine-learning-algorithm",
    "href": "slides/Topic7.html#recipes-of-a-machine-learning-algorithm",
    "title": "Short Course on R Tools",
    "section": "Recipes of a Machine Learning Algorithm",
    "text": "Recipes of a Machine Learning Algorithm\n\n\nInput data points, e.g. \n\nIf the task is speech recognition, these data points could be sound files\nIf the task is image tagging, they could be picture files\n\nExamples of the expected output \n\nIn a speech-recognition task, these could be transcripts of sound files\nIn an image task, expected outputs could tags such as “dog”, “cat”, and so on\n\nA way to measure whether the algorithm is doing a good job \n\nThis is needed to determine the distance between the output and its expected output.\nThe measurement is used as a feedback signal to adjust the way the algorithm works.",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#anatomy-of-a-neural-network",
    "href": "slides/Topic7.html#anatomy-of-a-neural-network",
    "title": "Short Course on R Tools",
    "section": "Anatomy of a Neural Network",
    "text": "Anatomy of a Neural Network\n\n\n\n\n\nThe input data and corresponding targets \nLayers, which are combined into a network (or model) \nThe loss function, which provides feedback for learning \nThe optimizer, which determines how learning proceeds",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#lenet-5-a-pioneering-7-level-cnn",
    "href": "slides/Topic7.html#lenet-5-a-pioneering-7-level-cnn",
    "title": "Short Course on R Tools",
    "section": "LeNet-5: a pioneering 7-level CNN",
    "text": "LeNet-5: a pioneering 7-level CNN\n\n\n\nThe first successful practical application of neural nets came in 1989 from Bell Labs, when Yann LeCun combined the earlier ideas of convolutional neural networks and backpropagation, and applied them to the problem of classifying handwritten digits.\nThe resulting network, dubbed LeNet, was used by the USPS in the 1990s to automate the reading of ZIP codes on mail envelopes.\nLeNet-5 was applied by several banks to recognize hand-written numbers on checks digitized in 32x32 pixel images.",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#why-30-years-gap",
    "href": "slides/Topic7.html#why-30-years-gap",
    "title": "Short Course on R Tools",
    "section": "Why 30+ Years gap?",
    "text": "Why 30+ Years gap?\n\n\n\nIn 2011, Dan Ciresan from IDSIA (Switzerland) began to win academic image-classification competitions with GPU-trained deep neural networks\nin 2012, a team led by Alex Krizhevsky and advised by Geoffrey Hinton was able to achieve a top-five accuracy of 83.6%–a significant breakthrough (in 2011 it was only 74.3%). \nThree forces are driving advances in ML:\n\nHardware\nDatasets and benchmarks\nAlgorithmic advances",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#vgg16cnn-for-classification-and-detection",
    "href": "slides/Topic7.html#vgg16cnn-for-classification-and-detection",
    "title": "Short Course on R Tools",
    "section": "VGG16–CNN for Classification and Detection",
    "text": "VGG16–CNN for Classification and Detection\n\n\n\nVGG16 is a convolutional neural network model proposed by K. Simonyan and A. Zisserman from the University of Oxford.\nThe model achieves 92.7% top-5 test accuracy in ImageNet. It was one of the famous model submitted to ILSVRC-2014.\nIt makes the improvement over AlexNet by replacing large kernel-sized filters (11 and 5 in the first and second convolutional layer, respectively) with multiple 3×3 kernel-sized filters one after another.\nVGG16 was trained for weeks using NVIDIA Titan Black GPU’s.",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#neural-network-parameters---activation-func.",
    "href": "slides/Topic7.html#neural-network-parameters---activation-func.",
    "title": "Short Course on R Tools",
    "section": "Neural Network – Parameters - Activation Func.",
    "text": "Neural Network – Parameters - Activation Func.\n\n\n\n\n\nA Neural Network\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActivation Function",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#linear-activation-function",
    "href": "slides/Topic7.html#linear-activation-function",
    "title": "Short Course on R Tools",
    "section": "Linear Activation function",
    "text": "Linear Activation function\n\n\n\n\n\\(Z=\\color{green}{W_1}X+\\color{lightblue}{b_1}\\)\n\n\n\n\n\n\n\n\n\\(Y=\\color{red}{W_2}Z+\\color{blue}{b_2}\\)\n\n\n\n\n\\(Y=\\color{red}{W_2}\\{\\color{green}{W_1}X+\\color{lightblue}{b_1}\\}+\\color{blue}{b_2}\\)\n\n\n\n\n\\(Y=\\{\\color{red}{W_2}\\color{green}{W_1}\\}X+\\{\\color{red}{W_2}\\color{lightblue}{b_1}+\\color{blue}{b_2}\\}\\)\n\n\n\n\n\n\n\n\n\\(Y=\\color{red}{\\mathbf{W}^*}X+\\color{blue}{\\mathbf{b}^*}\\)\n\n\n\nHidden Layers Disappears",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#deep-learning-software",
    "href": "slides/Topic7.html#deep-learning-software",
    "title": "Short Course on R Tools",
    "section": "Deep learning software",
    "text": "Deep learning software\n\n\n\n\n🔗 Wikipedia: Deep learning software",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#what-is-tensorflow",
    "href": "slides/Topic7.html#what-is-tensorflow",
    "title": "Short Course on R Tools",
    "section": "What is TensorFlow?",
    "text": "What is TensorFlow?\n\n\nYou define the graph in R\nGraph is compiled and optimized\nGraph is executed on devices\nNodes represent computations\nData (tensors) flows between them",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#why-tensorflow-in-r",
    "href": "slides/Topic7.html#why-tensorflow-in-r",
    "title": "Short Course on R Tools",
    "section": "Why TensorFlow in R?",
    "text": "Why TensorFlow in R?\n\n\nHardware independent\n\nCPU (via Eigen and BLAS)\nGPU (via CUDA and cuDNN)\nTPU (Tensor Processing Unit)\n\nSupports automatic differentiation\nDistributed execution and large datasets\nVery general built-in optimization algorithms (SGD, Adam) that don’t require that all data is in RAM\nIt can be deployed with a low-latency C++ runtime\nR has a lot to offer as an interface language for TensorFlow",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#real-world-examples-of-data-tensors",
    "href": "slides/Topic7.html#real-world-examples-of-data-tensors",
    "title": "Short Course on R Tools",
    "section": "Real-world examples of data tensors",
    "text": "Real-world examples of data tensors\n\n\n2D tensors\n\nVector data—(samples, features)  \n\n\n\n\n3D tensors\n\nGrayscale Images—(samples, height, width)\nTime-series data or sequence data—(samples, timesteps, features)\n\n\n\n\n \n\n\n\n\n\n\n4D tensors\n\nColor Images—(samples, height, width, channels)\n\n\n\n\n \n\n\n\n\n\n\n5D tensors\n\nVideo—(samples, frames, height, width, channels)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#why-keras",
    "href": "slides/Topic7.html#why-keras",
    "title": "Short Course on R Tools",
    "section": "Why Keras?",
    "text": "Why Keras?\n\n\nIt allows the same code to run seamlessly on CPU or GPU.\nIt has a user-friendly API that makes it easy to quickly prototype deep-learning models.",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#installing-keras",
    "href": "slides/Topic7.html#installing-keras",
    "title": "Short Course on R Tools",
    "section": "Installing Keras",
    "text": "Installing Keras\n  \n\n\n\n\nFirst, install the keras R package:\n\nremotes::install_github(\"rstudio/keras3\");    # OR\nInstall.packages(\"keras3\")\n\n\nTo install both the core Keras library as well as the TensorFlow backend\n\nlibrary(keras3)\nkeras3::install_keras(backend = \"tensorflow\")\n\n\n\nYou need Python installed before installing TensorFlow\n\nAnaconda (Python distribution), a free and open-source software\n\n\n\n\n\n\n\n\nYou can install TensorFlow with GPU support\n\nNVIDIA® drivers,\nCUDA Toolkit v9.0, and\ncuDNN v7.0\n\n\n\n\n\nare needed: https://tensorflow.rstudio.com/tools/local_gpu.html",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#developing-a-deep-nn-with-keras",
    "href": "slides/Topic7.html#developing-a-deep-nn-with-keras",
    "title": "Short Course on R Tools",
    "section": "Developing a Deep NN with Keras",
    "text": "Developing a Deep NN with Keras\n  \n\n\n\n\nStep 1 - Define your training data:\n\ninput tensors and target tensors.\n\n\n\n\nStep 2 - Define a network of layers (or model)\n\nthat maps your inputs to your targets.\n\n\n\n\n\nStep 3 - Configure the learning process by choosing\n\na loss function,\nan optimizer,\nand some metrics to monitor.\n\n\n\n\n\nStep 4 - Iterate on your training data by calling the\n\nfit() method of your model.",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-step-1-data-preprocessing",
    "href": "slides/Topic7.html#keras-step-1-data-preprocessing",
    "title": "Short Course on R Tools",
    "section": "Keras: Step 1 – Data preprocessing",
    "text": "Keras: Step 1 – Data preprocessing\n  \n\n\n\n\nlibrary(keras3)\n\n# Load MNIST (Modified National Institute of Standards and Technology) images datasets\nc(c(x_train, y_train), c(x_test, y_test)) %&lt;-% dataset_mnist()\n\n# Flatten images and transform RGB values into [0,1] range \nx_train &lt;- array_reshape(x_train, c(nrow(x_train), 784))\nx_test &lt;- array_reshape(x_test, c(nrow(x_test), 784))\nx_train &lt;- x_train / 255\nx_test &lt;- x_test / 255\n\n# Convert class vectors to binary class matrices\ny_train &lt;- to_categorical(y_train, 10)\ny_test &lt;- to_categorical(y_test, 10)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-step-2-model-definition",
    "href": "slides/Topic7.html#keras-step-2-model-definition",
    "title": "Short Course on R Tools",
    "section": "Keras: Step 2 – Model definition",
    "text": "Keras: Step 2 – Model definition\n  \n\n\n\n\n\nmodel &lt;- keras_model_sequential(input_shape = c(784)) \nmodel %&gt;% \n     layer_dense(units = 256, activation = 'relu') %&gt;% \n     layer_dropout(rate = 0.4) %&gt;% \n     layer_dense(units = 128, activation = 'relu') %&gt;%\n     layer_dropout(rate = 0.3) %&gt;%\n     layer_dense(units = 10, activation = 'softmax')\n     \nsummary(model)\n&gt;# Model: \"sequential\"\n&gt;# │ Layer (type)          │ Output Shape     │ Param # │\n&gt;# ├-----------------------┼------------------┼---------┤\n&gt;# │ dense_11 (Dense)      │ (None, 256)      │ 200,960 │\n&gt;# │ dropout_3 (Dropout)   │ (None, 256)      │       0 │\n&gt;# │ dense_10 (Dense)      │ (None, 128)      │  32,896 │\n&gt;# │ dropout_2 (Dropout)   │ (None, 128)      │       0 │\n&gt;# │ dense_9 (Dense)       │ (None, 10)       │   1,290 │\n&gt;# └-----------------------┴------------------┴---------┘\n&gt;#  Total params: 235,146 (918.54 KB)\n&gt;#  Trainable params: 235,146 (918.54 KB)\n&gt;#  Non-trainable params: 0 (0.00 B)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#multi-class-vs-multi-label-classification",
    "href": "slides/Topic7.html#multi-class-vs-multi-label-classification",
    "title": "Short Course on R Tools",
    "section": "Multi-Class vs Multi-Label Classification",
    "text": "Multi-Class vs Multi-Label Classification",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#multi-class-vs-multi-label-classification-cont.",
    "href": "slides/Topic7.html#multi-class-vs-multi-label-classification-cont.",
    "title": "Short Course on R Tools",
    "section": "Multi-Class vs Multi-Label Classification (Cont.)",
    "text": "Multi-Class vs Multi-Label Classification (Cont.)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#multi-class-vs-multi-label-classification-cont.-1",
    "href": "slides/Topic7.html#multi-class-vs-multi-label-classification-cont.-1",
    "title": "Short Course on R Tools",
    "section": "Multi-Class vs Multi-Label Classification (Cont.)",
    "text": "Multi-Class vs Multi-Label Classification (Cont.)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-step-3-compile-model",
    "href": "slides/Topic7.html#keras-step-3-compile-model",
    "title": "Short Course on R Tools",
    "section": "Keras: Step 3 – Compile Model",
    "text": "Keras: Step 3 – Compile Model\n  \n\n\n\n\nModel compilation prepares the model for training by:\n\nConverting the layers into a TensorFlow graph\nApplying the specified loss function and optimizer\nArranging for the collection of metrics during training\n\n\n\nmodel %&gt;% compile(\n  loss = 'categorical_crossentropy',\n  optimizer = optimizer_rmsprop(),\n  metrics = c('accuracy')\n)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-step-4-model-training",
    "href": "slides/Topic7.html#keras-step-4-model-training",
    "title": "Short Course on R Tools",
    "section": "Keras: Step 4 – Model Training",
    "text": "Keras: Step 4 – Model Training\n  \n\n\n\n\nUse the fit() to train the model for 10 epochs using batches of 128 images:\n\nFeed 128 samples at a time to the model (batch_size = 128)\nTraverse the input dataset 10 times (epochs = 10)\nHold out 20% of the data for validation (validation_split = 0.2)\n\n\n\nhistory &lt;- model %&gt;% fit(\n  x_train, y_train, \n  batch_size = 128, \n  epochs = 10,\n  validation_split = 0.2\n)\n\n\n\n\nEpoch 1/10\n375/375 ━━━━━ 3s 5ms/step - accuracy: 0.7831 - loss: 0.6970 - val_accuracy: 0.9513 - val_loss: 0.1640\nEpoch 2/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9371 - loss: 0.2123 - val_accuracy: 0.9628 - val_loss: 0.1249\nEpoch 3/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9539 - loss: 0.1540 - val_accuracy: 0.9666 - val_loss: 0.1098\nEpoch 4/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9612 - loss: 0.1301 - val_accuracy: 0.9743 - val_loss: 0.0865\nEpoch 5/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9663 - loss: 0.1145 - val_accuracy: 0.9730 - val_loss: 0.0921\nEpoch 6/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9688 - loss: 0.1020 - val_accuracy: 0.9736 - val_loss: 0.0923\nEpoch 7/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9726 - loss: 0.0940 - val_accuracy: 0.9770 - val_loss: 0.0822\nEpoch 8/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9742 - loss: 0.0875 - val_accuracy: 0.9770 - val_loss: 0.0815\nEpoch 9/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9750 - loss: 0.0791 - val_accuracy: 0.9785 - val_loss: 0.0810\nEpoch 10/10\n375/375 ━━━━━ 1s 3ms/step - accuracy: 0.9769 - loss: 0.0744 - val_accuracy: 0.9777 - val_loss: 0.0835\n\n\n\n\n\nmodel %&gt;% evaluate(x_test, y_test)\n&gt;# 313/313 ━━━━━ 0s 771us/step - accuracy: 0.9747 - loss: 0.0930\n&gt;# $accuracy\n&gt;# [1] 0.9791\n&gt;# \n&gt;# $loss\n&gt;# [1] 0.0784568",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-evaluation-and-prediction",
    "href": "slides/Topic7.html#keras-evaluation-and-prediction",
    "title": "Short Course on R Tools",
    "section": "Keras: Evaluation and prediction",
    "text": "Keras: Evaluation and prediction\n  \n\nplot(history)\n\n\nmodel %&gt;% predict(x_test[1:100,]) %&gt;% apply(1, which.max)-1\n&gt;# 4/4 ━━━━━━━━━━━━━━━━━━━━ 0s 957us/step\n&gt;#   [1] 7 2 1 0 4 1 4 9 6 9 0 6 9 0 1 5 9 7\n&gt;#  [19] 3 4 9 6 6 5 4 0 7 4 0 1 3 1 3 4 7 2\n&gt;#  [37] 7 1 2 1 1 7 4 2 3 5 1 2 4 4 6 3 5 5\n&gt;#  [55] 6 0 4 1 9 5 7 8 9 3 7 4 6 4 3 0 7 0\n&gt;#  [73] 2 9 1 7 3 2 9 7 7 6 2 7 8 4 7 3 6 1\n&gt;#  [91] 3 6 9 3 1 4 1 7 6 9\n\nround(model %&gt;% predict(x_test[1:9,]),5)\n&gt;# 1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 16ms/step\n&gt;#          [,1]    [,2]  [,3]  [,4]    [,5]    [,6]    [,7]    [,8]  [,9]   [,10]\n&gt;#  [1,] 0.00000 0.00000 0e+00 0.000 0.00000 0.00000 0.00000 1.00000 0e+00 0.00000\n&gt;#  [2,] 0.00000 0.00000 1e+00 0.000 0.00000 0.00000 0.00000 0.00000 0e+00 0.00000\n&gt;#  [3,] 0.00000 0.99983 1e-05 0.000 0.00001 0.00000 0.00000 0.00014 1e-05 0.00000\n&gt;#  [4,] 0.99986 0.00000 6e-05 0.000 0.00000 0.00000 0.00007 0.00000 0e+00 0.00000\n&gt;#  [5,] 0.00000 0.00000 0e+00 0.000 0.99995 0.00000 0.00000 0.00000 0e+00 0.00005\n&gt;#  [6,] 0.00000 0.99998 0e+00 0.000 0.00000 0.00000 0.00000 0.00002 0e+00 0.00000\n&gt;#  [7,] 0.00000 0.00000 0e+00 0.000 0.99984 0.00000 0.00000 0.00000 3e-05 0.00013\n&gt;#  [8,] 0.00000 0.00001 1e-05 0.002 0.00007 0.00007 0.00000 0.00044 4e-05 0.99737\n&gt;#  [9,] 0.00000 0.00000 0e+00 0.000 0.00000 0.30770 0.69230 0.00000 0e+00 0.00000",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-demo",
    "href": "slides/Topic7.html#keras-demo",
    "title": "Short Course on R Tools",
    "section": "Keras Demo",
    "text": "Keras Demo\n\nkeras3.posit.co\n🔗 Launch R",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-api-layers",
    "href": "slides/Topic7.html#keras-api-layers",
    "title": "Short Course on R Tools",
    "section": "Keras API: Layers",
    "text": "Keras API: Layers\n\n90+ layers available (you can also create your own)\n\n\n\n\n\n\n\nlayer_dense(units = 64, kernel_regularizer = regularizer_l1(0.01))\nlayer_dense(units = 64, bias_regularizer = regularizer_l2(0.01))",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#embedding-layers",
    "href": "slides/Topic7.html#embedding-layers",
    "title": "Short Course on R Tools",
    "section": "Embedding Layers",
    "text": "Embedding Layers\n\nVectorization of text that reflects semantic relationships between words\n\n \n\n\n\n\n\nmodel &lt;- keras_model_sequential() %&gt;%\n  layer_embedding(input_dim = 10000, output_dim = 8) %&gt;%\n  layer_flatten() %&gt;%\n  layer_dense(units = 1, activation = \"sigmoid\")\n\n\n\n\nHow to use?\n\nLearn the embeddings jointly with the main task (e.g. classification); or\nLoad pre-trained word embeddings (e.g. Word2vec, GloVe)",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#hands-on-exercises",
    "href": "slides/Topic7.html#hands-on-exercises",
    "title": "Short Course on R Tools",
    "section": "Hands-on Exercises",
    "text": "Hands-on Exercises\n\nBuild and train a CNN on Fashion MNIST\n\nMNIST CNN in keras3\n\n\n\n\n\n\n\nImplement an LSTM for\n\nText Classification in keras3\n\n\n\n\n\n\n\n\n\nCreate an autoencoder for dimensionality reduction and visualize embeddings",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic7.html#keras-for-r-cheatsheet",
    "href": "slides/Topic7.html#keras-for-r-cheatsheet",
    "title": "Short Course on R Tools",
    "section": "Keras for R cheatsheet",
    "text": "Keras for R cheatsheet\n\n\n\n\n\n\n\n\n\n\n🔗 Rstudio: Keras cheatsheet",
    "crumbs": [
      "Slides",
      "Deep Learning in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#basics",
    "href": "slides/Topic1.html#basics",
    "title": "Short Course on R Tools",
    "section": "Basics",
    "text": "Basics\n\nAn S3 object is a base type with at least a class attribute\n\n\nf &lt;- factor(c(\"a\", \"b\", \"b\"))\nf\n#&gt; [1] a b b\n#&gt; Levels: a b\nattributes(f)\n#&gt; $levels\n#&gt; [1] \"a\" \"b\"\n#&gt; \n#&gt; $class\n#&gt; [1] \"factor\"\nunclass(f)\n#&gt; [1] 1 2 2\n#&gt; attr(,\"levels\")\n#&gt; [1] \"a\" \"b\"\n\ntime &lt;- strptime(c(\"2017-01-01\", \"2020-05-04 03:21\"), \"%Y-%m-%d\")\nstr(time)\n#&gt;  POSIXlt[1:2], format: \"2017-01-01\" \"2020-05-04\"\n\nclass(time) &lt;- NULL\nstr(time)\n#&gt; List of 11\n#&gt;  $ sec   : num [1:2] 0 0\n#&gt;  $ min   : int [1:2] 0 0\n#&gt;  $ hour  : int [1:2] 0 0\n#&gt;  $ mday  : int [1:2] 1 4\n#&gt;  $ mon   : int [1:2] 0 4\n#&gt;  $ year  : int [1:2] 117 120\n#&gt;  $ wday  : int [1:2] 0 1\n#&gt;  $ yday  : int [1:2] 0 124\n#&gt;  $ isdst : int [1:2] 0 0\n#&gt;  $ zone  : chr [1:2] \"UTC\" \"UTC\"\n#&gt;  $ gmtoff: int [1:2] 0 0\n#&gt;  - attr(*, \"tzone\")= chr \"UTC\"\n#&gt;  - attr(*, \"balanced\")= logi TRUE",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#classes",
    "href": "slides/Topic1.html#classes",
    "title": "Short Course on R Tools",
    "section": "Classes",
    "text": "Classes\n# Create and assign class in one step\nx &lt;- structure(list(), class = \"my_class\")\n\n# Create, then set class\nx &lt;- list()\nclass(x) &lt;- \"my_class\"\n\nclass(x)\n#&gt; [1] \"my_class\"\ninherits(x, \"my_class\")\n#&gt; [1] TRUE\ninherits(x, \"your_class\")\n#&gt; [1] FALSE\n\n\nR doesn’t stop you from shooting yourself in the foot, but as long as you don’t aim the gun at your toes and pull the trigger, you won’t have a problem.",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#classes---common-practice",
    "href": "slides/Topic1.html#classes---common-practice",
    "title": "Short Course on R Tools",
    "section": "Classes - Common Practice",
    "text": "Classes - Common Practice\nTo avoid foot-bullet intersections when creating your own class, you may:\n\n\nA low-level constructor, new_myclass(), that efficiently creates new objects with the correct structure.\nA validator, validate_myclass(), that performs more computationally expensive checks to ensure that the object has correct values.\nA user-friendly helper, myclass(), that provides a convenient way for others to create objects of your class.",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#classes---example",
    "href": "slides/Topic1.html#classes---example",
    "title": "Short Course on R Tools",
    "section": "Classes - Example",
    "text": "Classes - Example\n\n## 1. Low‐level constructor: assume inputs are ok\nnew_myclass &lt;- function(values = numeric(), unit = character(1)) {\n  # no checks here beyond base‐R stopifnot\n  stopifnot(is.numeric(values), is.character(unit), length(unit) == 1)\n  structure(\n    list(values = values, unit = unit),\n    class = \"myclass\"\n  )\n}\n\n## 2. Validator: more thorough checks\nvalidate_myclass &lt;- function(x) {\n  if (!inherits(x, \"myclass\")) {\n    stop(\"`x` must be a 'myclass' object.\", call. = FALSE)\n  }\n  if (!is.numeric(x$values)) {\n    stop(\"`values` must be numeric.\", call. = FALSE)\n  }\n  if (any(is.na(x$values))) {\n    stop(\"`values` must not contain NA.\", call. = FALSE)\n  }\n  if (!is.character(x$unit) || length(x$unit) != 1) {\n    stop(\"`unit` must be a single character string.\", call. = FALSE)\n  }\n  TRUE\n}\n\n## (Optional) a simple print method\nprint.myclass &lt;- function(x, ...) {\n  cat(\"&lt;myclass&gt;  \", length(x$values), \"values [unit = \", x$unit, \"]\\n\", sep = \"\")\n  print(x$values)\n  invisible(x)\n}\n\n## 3. User‐facing helper: coerce/check inputs, then build + validate\nmyclass &lt;- function(values, unit = \"unitless\") {\n  # quick checks / coercions:\n  if (!is.numeric(values)) {\n    values &lt;- as.numeric(values)\n    if (any(is.na(values))) stop(\"`values` could not be coerced to numeric.\", call. = FALSE)\n  }\n  if (!is.character(unit) || length(unit) != 1) {\n    stop(\"`unit` must be a single character string.\", call. = FALSE)\n  }\n  # build & validate\n  obj &lt;- new_myclass(values = values, unit = unit)\n  validate_myclass(obj)\n  obj\n}\n\n## --- Example usage ---\nx &lt;- myclass(c(1.1, 2.2, 3.3), unit = \"kg\")\nprint(x)\n#&gt; &lt;myclass&gt; 3 values [unit = kg]\n#&gt; [1] 1.1 2.2 3.3\n\n# This will error because of an NA:\n# myclass(c(1, NA, 3))",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#generics-and-methods---method-dispatch",
    "href": "slides/Topic1.html#generics-and-methods---method-dispatch",
    "title": "Short Course on R Tools",
    "section": "Generics and Methods - Method Dispatch",
    "text": "Generics and Methods - Method Dispatch\nView(print)\n#&gt; function (x, ...) \n#&gt; UseMethod(\"print\")\n\nftype(print)\n#&gt; [1] \"S3\"      \"generic\"\nftype(print.factor)\n#&gt; [1] \"S3\"     \"method\"\n\ns3_dispatch(print(f))\n#&gt; =&gt; print.factor\n#&gt;  * print.default\ns3_dispatch(print(unclass(f)))\n#&gt;    print.integer\n#&gt;    print.numeric\n#&gt; =&gt; print.default",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#finding-methods",
    "href": "slides/Topic1.html#finding-methods",
    "title": "Short Course on R Tools",
    "section": "Finding methods",
    "text": "Finding methods\ns3_methods_generic(\"mean\")\n#&gt; # A tibble: 7 × 4\n#&gt;   generic class      visible source             \n#&gt;   &lt;chr&gt;   &lt;chr&gt;      &lt;lgl&gt;   &lt;chr&gt;              \n#&gt; 1 mean    Date       TRUE    base               \n#&gt; 2 mean    default    TRUE    base               \n#&gt; 3 mean    difftime   TRUE    base               \n#&gt; 4 mean    POSIXct    TRUE    base               \n#&gt; 5 mean    POSIXlt    TRUE    base               \n#&gt; 6 mean    quosure    FALSE   registered S3method\n#&gt; 7 mean    vctrs_vctr FALSE   registered S3method\n\ns3_methods_class(\"funts\")\n#&gt; # A tibble: 7 × 4\n#&gt;   generic class visible source             \n#&gt;   &lt;chr&gt;   &lt;chr&gt; &lt;lgl&gt;   &lt;chr&gt;              \n#&gt; 1 -       funts FALSE   registered S3method\n#&gt; 2 *       funts FALSE   registered S3method\n#&gt; 3 [       funts FALSE   registered S3method\n#&gt; 4 +       funts FALSE   registered S3method\n#&gt; 5 length  funts FALSE   registered S3method\n#&gt; 6 plot    funts FALSE   registered S3method\n#&gt; 7 print   funts FALSE   registered S3method",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#creating-methods",
    "href": "slides/Topic1.html#creating-methods",
    "title": "Short Course on R Tools",
    "section": "Creating methods",
    "text": "Creating methods\n\n\nmean.myclass &lt;- function(x, ...) {\n  print(\"custom mean\")\n}\n\nmean(x)\n\n[1] \"custom mean\"\n\n\n\n\n\n\nA method must have the same arguments as its generic. This is enforced in packages by R CMD check.\n\n\n\n\n\nThere is one exception to this rule: if the generic has ..., the method can contain a superset of the arguments. This allows methods to take arbitrary additional arguments.",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#inheritance",
    "href": "slides/Topic1.html#inheritance",
    "title": "Short Course on R Tools",
    "section": "Inheritance",
    "text": "Inheritance\nx &lt;- factor(\"a\",\"b\",\"b\")\nclass(x)\n#&gt; \"factor\"\n\nclass(ordered(x))\n#&gt; \"ordered\" \"factor\"\n\ns3_dispatch(print(ordered(x)))\n#&gt;    print.ordered\n#&gt; =&gt; print.factor\n#&gt;  * print.default\n\ns3_dispatch(ordered(x)[1])\n#&gt;    [.ordered\n#&gt; =&gt; [.factor\n#&gt;    [.default\n#&gt; -&gt; [ (internal)\n\n\nWe’ll say that ordered is a subclass of factor and factor is a superclass of ordered.",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#inheritance-cont.",
    "href": "slides/Topic1.html#inheritance-cont.",
    "title": "Short Course on R Tools",
    "section": "Inheritance Cont.",
    "text": "Inheritance Cont.\n\nnew_secret &lt;- function(x = double()) {\n  stopifnot(is.double(x))\n  structure(x, class = \"secret\")\n}\n\nprint.secret &lt;- function(x, ...) {\n  print(strrep(\"x\", nchar(x)))\n  invisible(x)\n}\n\nx &lt;- new_secret(c(15, 1, 456))\nx\n#&gt; [1] \"xx\"  \"x\"   \"xxx\"\n\ns3_dispatch(x[1])\n#&gt;    [.secret\n#&gt;    [.default\n#&gt; =&gt; [ (internal)\n\nx[1]\n#&gt; [1] 15\n\n\n\nTo fix this, we need to provide a [.secret method.",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#inheritance-cont.---nextmethod",
    "href": "slides/Topic1.html#inheritance-cont.---nextmethod",
    "title": "Short Course on R Tools",
    "section": "Inheritance Cont. - NextMethod()",
    "text": "Inheritance Cont. - NextMethod()\n\n`[.secret` &lt;- function(x, i) {\n  x &lt;- unclass(x)\n  new_secret(x[i])\n}\n\nx[1]\n#&gt; [1] \"xx\"\n\n\n\nA better solution using NextMethod()\n\n\n`[.secret` &lt;- function(x, i) {\n  new_secret(NextMethod())\n}\n\nx[1]\n#&gt; [1] \"xx\"\n\ns3_dispatch(x[1])\n#&gt; =&gt; [.secret\n#&gt;    [.default\n#&gt; -&gt; [ (internal)",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#generics-methods",
    "href": "slides/Topic1.html#generics-methods",
    "title": "Short Course on R Tools",
    "section": "Generics & Methods",
    "text": "Generics & Methods\n\n\nDefine generic:\nsetGeneric(\"greet\", function(x) standardGeneric(\"greet\"))\nDefine method:\nsetMethod(\"greet\", \"Person\", function(x) {\n  paste(\"Hello, my name is\", x@name)\n})\nExample:\ngreet(subj1)\n#&gt; [1] \"Hello, my name is Adam\"",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#inheritance-virtual-classes",
    "href": "slides/Topic1.html#inheritance-virtual-classes",
    "title": "Short Course on R Tools",
    "section": "Inheritance & Virtual Classes",
    "text": "Inheritance & Virtual Classes\n\n\nInheritance:\nsetClass(\"Employee\", contains = \"Person\",\n  slots = list(salary = \"numeric\"))\nExample:\nemp1 &lt;- new(\"Employee\", subj1, salary = 75000)\nemp1\n#&gt; An object of class \"Employee\"\n#&gt; Slot \"salary\":\n#&gt; [1] 75000\n#&gt; \n#&gt; Slot \"name\":\n#&gt; [1] \"Adam\"\n#&gt; \n#&gt; Slot \"age\":\n#&gt; [1] 30",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/Topic1.html#advanced-features",
    "href": "slides/Topic1.html#advanced-features",
    "title": "Short Course on R Tools",
    "section": "Advanced Features",
    "text": "Advanced Features\n\nActive bindings\nInheritance & extension\nPrivate vs public\nUse cases: GUI, stateful objects, iterative algorithms",
    "crumbs": [
      "Slides",
      "OOP in R"
    ]
  },
  {
    "objectID": "slides/summary_mm.html#motivating-example---functional-singular-spectrum-analysis",
    "href": "slides/summary_mm.html#motivating-example---functional-singular-spectrum-analysis",
    "title": "Short Course on R Tools",
    "section": "Motivating Example - Functional Singular Spectrum Analysis",
    "text": "Motivating Example - Functional Singular Spectrum Analysis"
  },
  {
    "objectID": "slides/summary_mm.html#motivating-example---oop",
    "href": "slides/summary_mm.html#motivating-example---oop",
    "title": "Short Course on R Tools",
    "section": "Motivating Example - OOP",
    "text": "Motivating Example - OOP"
  },
  {
    "objectID": "slides/summary_mm.html#motivating-example---oop-cont.",
    "href": "slides/summary_mm.html#motivating-example---oop-cont.",
    "title": "Short Course on R Tools",
    "section": "Motivating Example - OOP (Cont.)",
    "text": "Motivating Example - OOP (Cont.)"
  },
  {
    "objectID": "slides/summary_mm.html#oop-in-practice",
    "href": "slides/summary_mm.html#oop-in-practice",
    "title": "Short Course on R Tools",
    "section": "🛠️ OOP in Practice",
    "text": "🛠️ OOP in Practice\n🔁 Comparison of Systems\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream | System | Style | Used In | ✅ Pros | ⚠️ Cons | |—————|—————|—————|—————|—————| | S3 | Functional | Base R | Simple, extensible | No schema, fragile | | S4 | Formal | Bioconductor | Type-safe, robust | Verbose, complex | | R6 | Encapsulated | Shiny, packages | Fast, mutable | Weak type safety | | S7 | Unified OOP | Modern dev | Combines S3 & S4 benefits | Still evolving |"
  },
  {
    "objectID": "slides/summary_mm.html#example-s3-class-with-constructor",
    "href": "slides/summary_mm.html#example-s3-class-with-constructor",
    "title": "Short Course on R Tools",
    "section": "💡 Example: S3 Class with Constructor",
    "text": "💡 Example: S3 Class with Constructor\n=======\n| System | Style         | Used In        | ✅ Pros                  | ⚠️ Cons              |\n|--------|---------------|----------------|--------------------------|----------------------|\n| S3     | Functional    | Base R         | Simple, extensible       | No schema, fragile   |\n| S4     | Formal        | Bioconductor   | Type-safe, robust        | Verbose, complex     |\n| R6     | Encapsulated  | Shiny, packages| Fast, mutable            | Weak type safety     |\n| S7     | Unified OOP   | Modern dev     | Combines S3 & S4 benefits| Still evolving       |\n\n## 💡 Example: S3 Class with Constructor\n```r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes\nmyclass &lt;- function(x) {\n  stopifnot(is.numeric(x))\n  structure(list(value = x), class = \"myclass\")\n}\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream\n\n📌 Choose your OOP system based on team size, project complexity, and ecosystem."
  },
  {
    "objectID": "slides/summary_mm.html#shiny-concepts-deployment",
    "href": "slides/summary_mm.html#shiny-concepts-deployment",
    "title": "Short Course on R Tools",
    "section": "Shiny Concepts & Deployment",
    "text": "Shiny Concepts & Deployment\n\n⚡Reactivity System:\n\nreactive(): memoized reactive expressions\nisolate(): break reactive chains\nobserveEvent(): trigger actions without outputs\n\n🚀 Deployment Options:\n\nshinyapps.io, Posit Connect, university servers\nshinylive: deploy as static site (experimental)\n\n✅ Best Practices:\n\nUse shinytest2 for testing\nModularize with modules for scalability\nSketch UI/UX before coding\n\n🧠 Hands-on:\n\nKNN Regression in Shiny\nExplore shinyapps gallery for inspiration: https://shiny.posit.co/gallery/"
  },
  {
    "objectID": "slides/summary_mm.html#rcpp-in-action",
    "href": "slides/summary_mm.html#rcpp-in-action",
    "title": "Short Course on R Tools",
    "section": "🔬 Rcpp in Action",
    "text": "🔬 Rcpp in Action\n\n🧪 Examples:\n\nOdd/Even test (basic)\n\nbool is_even(int x) {\nreturn x % 2 == 0;\n}\n\nVAR(1) simulation with RcppArmadillo\nFibonacci benchmark: 200× speedup\n\nC++ Types: NumericVector, IntegerVector, STL containers\nData conversion: Seamless mapping between R and C++ objects\n📦 Packaging:\n\nUse LinkingTo: Rcpp in DESCRIPTION\nAutomate with usethis::use_rcpp()\nMaintainable, testable code with Rcpp::compileAttributes()"
  },
  {
    "objectID": "slides/summary_mm.html#using-python-from-r",
    "href": "slides/summary_mm.html#using-python-from-r",
    "title": "Short Course on R Tools",
    "section": "🛠 Using Python from R",
    "text": "🛠 Using Python from R\n\nVirtualenv / Conda: manage environments cleanly\nCalling Python functions & classes from .py files\nUsing Python in Shiny apps\n\nExample: compute factorial via math.factorial\n\nlibrary(shiny)\nui &lt;- fluidPage(\nactionButton(\"btn\", \"Compute factorial\"),\nverbatimTextOutput(\"out\")\n)\nserver &lt;- function(input, output) {\nobserveEvent(input$btn, {\n  reticulate::py_run_string(\"import math; res = math.factorial(10)\")\n  output$out &lt;- renderText(py$res)\n})\n}\nshinyApp(ui, server)\nR Markdown / Quarto:\n\nInline Python code in {python} chunks\nShare variables between R and Python"
  },
  {
    "objectID": "slides/summary_mm.html#takeaways",
    "href": "slides/summary_mm.html#takeaways",
    "title": "Short Course on R Tools",
    "section": "Takeaways",
    "text": "Takeaways\n\nUse reticulate to blend Python’s ML power with R’s statistical strength\nMatch tools to tasks without leaving your R workflow\nIdeal for reproducible, collaborative data science"
  },
  {
    "objectID": "slides/summary_mm.html#package-structure",
    "href": "slides/summary_mm.html#package-structure",
    "title": "Short Course on R Tools",
    "section": "🏗 Package Structure",
    "text": "🏗 Package Structure\n\nDESCRIPTION: metadata\nNAMESPACE: exports and imports\nR/: function definitions\nman/: auto-generated docs"
  },
  {
    "objectID": "slides/summary_mm.html#development-lifecycle",
    "href": "slides/summary_mm.html#development-lifecycle",
    "title": "Short Course on R Tools",
    "section": "🛠 Development Lifecycle",
    "text": "🛠 Development Lifecycle\n\n5 Package States:\n\nSource → Bundled → Binary → Installed → In-Memory\n\nCreating a Package\n\nUse usethis::create_package()\nWrite functions in R/, document with roxygen2\n\nDocumentation & Export\n\nGenerate with devtools::document()\nExpose with @export and @import\n\nBuild & Install\n\nBuild with devtools::build()\nInstall with devtools::install()"
  },
  {
    "objectID": "slides/summary_mm.html#takeaways-1",
    "href": "slides/summary_mm.html#takeaways-1",
    "title": "Short Course on R Tools",
    "section": "📌 Takeaways",
    "text": "📌 Takeaways\n\nR packages provide a professional structure to your work\nAutomate documentation, testing, and sharing\nEssential for reproducible, collaborative, and maintainable R code"
  },
  {
    "objectID": "slides/summary_mm.html#cran-submission",
    "href": "slides/summary_mm.html#cran-submission",
    "title": "Short Course on R Tools",
    "section": "🚀 CRAN Submission",
    "text": "🚀 CRAN Submission\n\nCRAN = Comprehensive R Archive Network\nPackages must pass R CMD check with:\n\n❌ No ERRORs\n⚠️ No WARNINGs\n📝 Minimal NOTEs\n\nSimulate checks with rhub::check_for_cran()\nSubmit via devtools::release()\nResponse from CRAN in ~1–3 days"
  },
  {
    "objectID": "slides/summary_mm.html#before-you-submit",
    "href": "slides/summary_mm.html#before-you-submit",
    "title": "Short Course on R Tools",
    "section": "🛠 Before You Submit",
    "text": "🛠 Before You Submit\n\nUse devtools::check() for local testing\nInclude:\n\nValid license\nORCID info\nClean examples and documentation\n\nUpdate via version bump and NEWS.md"
  },
  {
    "objectID": "slides/summary_mm.html#collaborate-via-github",
    "href": "slides/summary_mm.html#collaborate-via-github",
    "title": "Short Course on R Tools",
    "section": "🤝 Collaborate via GitHub",
    "text": "🤝 Collaborate via GitHub\n\nGit = local version control\nGitHub = cloud hosting and collaboration\nRStudio integrates Git workflows\nUse usethis::use_github() to link project\n\n✅ Auth via Personal Access Token (PAT) using gitcreds"
  },
  {
    "objectID": "slides/summary_mm.html#daily-git-workflow",
    "href": "slides/summary_mm.html#daily-git-workflow",
    "title": "Short Course on R Tools",
    "section": "🧪 Daily Git Workflow",
    "text": "🧪 Daily Git Workflow\n\nEdit → Stage → Commit → Push\nShare changes, open pull requests\nCheck status with usethis::git_sitrep()"
  },
  {
    "objectID": "slides/summary_mm.html#shiny-concepts-deployment-1",
    "href": "slides/summary_mm.html#shiny-concepts-deployment-1",
    "title": "Short Course on R Tools",
    "section": "Shiny Concepts & Deployment",
    "text": "Shiny Concepts & Deployment\n\n⚡Reactivity System:\n\nreactive(): memoized reactive expressions\nisolate(): break reactive chains\nobserveEvent(): trigger actions without outputs\n\n🚀 Deployment Options:\n\nshinyapps.io, Posit Connect, university servers\nshinylive: deploy as static site (experimental)\n\n✅ Best Practices:\n\nUse shinytest2 for testing\nModularize with modules for scalability\nSketch UI/UX before coding\n\n🧠 Hands-on:\n\nKNN Regression in Shiny\nExplore shinyapps gallery for inspiration: https://shiny.posit.co/gallery/"
  },
  {
    "objectID": "slides/summary_mm.html#rcpp-in-action-1",
    "href": "slides/summary_mm.html#rcpp-in-action-1",
    "title": "Short Course on R Tools",
    "section": "🔬 Rcpp in Action",
    "text": "🔬 Rcpp in Action\n\n🧪 Examples:\n\nOdd/Even test (basic)\n\nbool is_even(int x) {\nreturn x % 2 == 0;\n}\n\nVAR(1) simulation with RcppArmadillo\nFibonacci benchmark: 200× speedup\n\nC++ Types: NumericVector, IntegerVector, STL containers\nData conversion: Seamless mapping between R and C++ objects\n📦 Packaging:\n\nUse LinkingTo: Rcpp in DESCRIPTION\nAutomate with usethis::use_rcpp()\nMaintainable, testable code with Rcpp::compileAttributes()"
  },
  {
    "objectID": "slides/summary_hh.html#why-call-python-from-r",
    "href": "slides/summary_hh.html#why-call-python-from-r",
    "title": "Short Course on R Tools",
    "section": "🤖 Why Call Python from R?",
    "text": "🤖 Why Call Python from R?\nSometimes, R alone isn’t enough. Calling Python lets you:\n\n\n💡 Use cutting-edge machine learning (e.g., scikit-learn)\n🧠 Access deep learning frameworks (PyTorch,TensorFlow)\n🔎 Run powerful text and image processing with spaCy, OpenCV\n📊 Leverage fast data engines like polars or pandas\n🌐 Scrape complex websites using Selenium or BeautifulSoup\n\n\n\n\n💡 Language interoperability enables modular, high-performance, and collaborative software development."
  },
  {
    "objectID": "slides/summary_hh.html#collaboration-across-languages",
    "href": "slides/summary_hh.html#collaboration-across-languages",
    "title": "Short Course on R Tools",
    "section": "👥 Collaboration Across Languages",
    "text": "👥 Collaboration Across Languages\nIn real-world projects, R and Python users often work together:\n\n\n👨‍🔬 Data scientists build statistical models in R\n🤖 ML engineers prototype in Python\n📊 Analysts report results using R Markdown\n\n\n\n💡 Why use reticulate in a team?\n\n\n🔄 Avoid rewriting code from one language to another\n🔁 Call shared models or preprocessing functions written in Python\n📦 Reuse Python packages or APIs within your R workflow\n📤 Publish reproducible reports that include both R and Python code"
  },
  {
    "objectID": "slides/summary_hh.html#motivated-example",
    "href": "slides/summary_hh.html#motivated-example",
    "title": "Short Course on R Tools",
    "section": "Motivated Example",
    "text": "Motivated Example\n🎯 Leverage a pretrained PyTorch CNN in R to:\n\n\nClassify handwritten digit images (.png)\n\n\n\n\nRun predictions directly in R\n\n\n\n\nVisualize outputs using Python’s matplotlib"
  },
  {
    "objectID": "slides/summary_hh.html#step-1-define-the-cnn-model-in-python",
    "href": "slides/summary_hh.html#step-1-define-the-cnn-model-in-python",
    "title": "Short Course on R Tools",
    "section": "Step 1: Define the CNN Model in Python",
    "text": "Step 1: Define the CNN Model in Python\n🧠 File: model.py\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass SimpleCNN(nn.Module):\n    def __init__(self):\n        super(SimpleCNN, self).__init__()\n        self.conv1_layer = nn.Conv2d(1, 16, kernel_size=3, padding=1)\n        self.conv2_layer = nn.Conv2d(16, 32, kernel_size=3, padding=1)\n        self.fc1_layer = nn.Linear(32 * 7 * 7, 128)\n        self.fc2_layer = nn.Linear(128, 10)\n\n    def forward(self, inputs):\n        x = F.relu(self.conv1_layer(inputs))\n        x = F.max_pool2d(x, 2, 2)\n        x = F.relu(self.conv2_layer(x))\n        x = F.max_pool2d(x, 2, 2)\n        x = x.view(-1, 32 * 7 * 7)\n        x = F.relu(self.fc1_layer(x))\n        return self.fc2_layer(x)"
  },
  {
    "objectID": "slides/summary_hh.html#step-2-dataset",
    "href": "slides/summary_hh.html#step-2-dataset",
    "title": "Short Course on R Tools",
    "section": "🖼️ Step 2: Dataset",
    "text": "🖼️ Step 2: Dataset\nWe use the MNIST dataset of handwritten digits."
  },
  {
    "objectID": "slides/summary_hh.html#step-3-train-the-model-on-a-gpu-machine",
    "href": "slides/summary_hh.html#step-3-train-the-model-on-a-gpu-machine",
    "title": "Short Course on R Tools",
    "section": "🚀 Step 3: Train the Model on a GPU Machine",
    "text": "🚀 Step 3: Train the Model on a GPU Machine\n⚙️ Run following train.py on a GPU-enabled desktop.\n✅ Output: cnn_model.pth (trained weights)\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport torchvision\nimport torchvision.transforms as transforms\nfrom torch.utils.data import DataLoader\nfrom model import SimpleCNN\n\n# Use GPU if available\ndevice = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\nprint(f\"Using device: {device}\")\n\n# Define transformation to apply to the data\ndata_transform = transforms.Compose([\n    transforms.ToTensor(),  # Convert images to PyTorch tensors\n    transforms.Normalize((0.5,), (0.5,))  # Normalize the pixel values to range [-1, 1]\n])\n\n# Download MNIST dataset and apply the transformation\ntrain_dataset = torchvision.datasets.MNIST(root='./data', train=True, transform=data_transform, download=False)\ntest_dataset = torchvision.datasets.MNIST(root='./data', train=False, transform=data_transform, download=False)\n\n# Define data loaders to load the data in batches during training and testing\ntrain_loader = DataLoader(train_dataset, batch_size=64, shuffle=True)\ntest_loader = DataLoader(test_dataset, batch_size=64, shuffle=False)\n\n# Instantiate model and move to device\ncnn_model = SimpleCNN().to(device)\n\n# Define loss function and optimizer\nloss_func = nn.CrossEntropyLoss()\noptimizer = optim.Adam(cnn_model.parameters(), lr=0.001)\n\n# Train model\nfor epoch in range(5):\n    cnn_model.train()\n    running_loss = 0.0\n    for inputs, labels in train_loader:\n        inputs, labels = inputs.to(device), labels.to(device)\n\n        optimizer.zero_grad()\n        outputs = cnn_model(inputs)\n        loss = loss_func(outputs, labels)\n        loss.backward()\n        optimizer.step()\n\n        running_loss += loss.item()\n    print(f\"Epoch {epoch+1}, Loss: {running_loss / len(train_loader):.4f}\")\n\n# Evaluate on test data\ncnn_model.eval()\ncorrect_predictions = 0\ntotal_samples = 0\nwith torch.no_grad():\n    for inputs, labels in test_loader:\n        inputs, labels = inputs.to(device), labels.to(device)\n        outputs = cnn_model(inputs)\n        _, predicted_labels = torch.max(outputs, 1)\n        total_samples += labels.size(0)\n        correct_predictions += (predicted_labels == labels).sum().item()\n\naccuracy = 100 * correct_predictions / total_samples\nprint(f\"Accuracy of test set: {accuracy:.2f}%\")\n\n# Save the model\ntorch.save(cnn_model.state_dict(), 'cnn_model.pth')"
  },
  {
    "objectID": "slides/summary_hh.html#step-4-load-the-model-in-r-with-reticulate",
    "href": "slides/summary_hh.html#step-4-load-the-model-in-r-with-reticulate",
    "title": "Short Course on R Tools",
    "section": "🧬 Step 4: Load the Model in R with reticulate",
    "text": "🧬 Step 4: Load the Model in R with reticulate\n📦 Place both model.py and cnn_model.pth in your R project\nlibrary(reticulate)\ntorch &lt;- import(\"torch\")\ntransforms &lt;- import(\"torchvision.transforms\", convert = TRUE)\nImage &lt;- import(\"PIL.Image\", convert = FALSE)\nplt &lt;- import(\"matplotlib.pyplot\")\nos &lt;- import(\"os\")\n\n# Source your model class\nsource_python(\"python/model.py\")\n\ndevice &lt;- torch$device(\"cpu\")\n# device &lt;- torch$device(\"cuda\")\n\nmodel &lt;- SimpleCNN()$to(device)\nmodel$load_state_dict(torch$load(\"python/cnn_model.pth\", map_location = device))\nmodel$eval()"
  },
  {
    "objectID": "slides/summary_hh.html#step-5-predict-and-visualize-in-r",
    "href": "slides/summary_hh.html#step-5-predict-and-visualize-in-r",
    "title": "Short Course on R Tools",
    "section": "🖼️ Step 5: Predict and Visualize in R",
    "text": "🖼️ Step 5: Predict and Visualize in R\n# Preprocessing pipeline\ntransform &lt;- transforms$Compose(list(\n  transforms$Grayscale(),\n  transforms$Resize(tuple(28L, 28L)),\n  transforms$ToTensor(),\n  transforms$Normalize(tuple(0.5), tuple(0.5))\n))\n\nimage_dir &lt;- \"python/test_images\"\nimage_files &lt;- sort(Filter(function(f) endsWith(f, \".png\"), os$listdir(image_dir)))\n\nplt$figure(figsize = tuple(10, 3))\n\nwith(torch$no_grad(), {\n  for (idx in seq_along(image_files)) {\n    img_file &lt;- image_files[[idx]]\n    img_path &lt;- file.path(image_dir, img_file)\n    image &lt;- Image$open(img_path)\n    input_tensor &lt;- transform(image)$unsqueeze(0L)$to(device)\n    output &lt;- model(input_tensor)\n    predicted_label &lt;- torch$argmax(output, dim = 1L)$item()\n    plt$subplot(1L, length(image_files), idx)\n    plt$imshow(image$convert(\"L\"), cmap = \"gray\")\n    plt$title(sprintf(\"Predicted: %s\", predicted_label))\n    plt$axis(\"off\")\n  }\n})\n\nplt$tight_layout()\nplt$show()"
  },
  {
    "objectID": "slides/summary_hh.html#final-result",
    "href": "slides/summary_hh.html#final-result",
    "title": "Short Course on R Tools",
    "section": "✅ Final Result",
    "text": "✅ Final Result"
  },
  {
    "objectID": "slides/summary_hh.html#motivations-to-package-your-code",
    "href": "slides/summary_hh.html#motivations-to-package-your-code",
    "title": "Short Course on R Tools",
    "section": "💡 Motivations to Package Your Code",
    "text": "💡 Motivations to Package Your Code\n🧰 Why build a package?\n\n\n♻️ Reuse and organize reusable code chunks\n📖 Provide documentation and examples\n🧪 Add unit tests to ensure reliability\n🌐 Distribute:\n\nvia CRAN for wide access\nvia GitHub for collaborative development\nor keep it private for internal use"
  },
  {
    "objectID": "slides/summary_hh.html#setup-requirements",
    "href": "slides/summary_hh.html#setup-requirements",
    "title": "Short Course on R Tools",
    "section": "🛠 Setup Requirements",
    "text": "🛠 Setup Requirements\nInstall development tools:\ninstall.packages(c(\"devtools\", \"roxygen2\", \"testthat\", \"knitr\"))\n\nCheck system:\n✅ Ensure R and RStudio are updated\n✅ Use usethis package for automation\n\n\nExample:\nusethis::create_package(\"mypkg\")"
  },
  {
    "objectID": "slides/summary_hh.html#package-structure-overview",
    "href": "slides/summary_hh.html#package-structure-overview",
    "title": "Short Course on R Tools",
    "section": "🏗 Package Structure Overview",
    "text": "🏗 Package Structure Overview\nmypkg/\n├── DESCRIPTION         # 📋 Package metadata\n├── NAMESPACE           # 🔁 Exported functions & imports\n├── R/                  # 📂 Your R functions\n└── man/                # 📚 Auto-generated documentation\n\n💡 Other folders you may add:\n\n\n📂 tests/ → Unit tests (testthat)\n📂 vignettes/ → Long-form docs\n📂 data/ → Internal or example datasets"
  },
  {
    "objectID": "slides/summary_hh.html#anatomy-of-a-description-file",
    "href": "slides/summary_hh.html#anatomy-of-a-description-file",
    "title": "Short Course on R Tools",
    "section": "🧩 Anatomy of a DESCRIPTION File",
    "text": "🧩 Anatomy of a DESCRIPTION File\nPackage: mypkg\nTitle: Tools for Cool Analysis\nVersion: 0.1.0\nAuthors@R: person(\"Your\", \"Name\", email = \"you@mail.com\", role = c(\"aut\", \"cre\"))\nDescription: A simple demo R package with functions and examples.\nLicense: MIT + file LICENSE\nImports: dplyr"
  },
  {
    "objectID": "slides/summary_hh.html#package-states-in-r",
    "href": "slides/summary_hh.html#package-states-in-r",
    "title": "Short Course on R Tools",
    "section": "🛠 Package States in R",
    "text": "🛠 Package States in R\nR packages transition through five development states:\n\n\n🗂️ Source: your raw package folder\n📦 Bundled: compressed .tar.gz for sharing\n🧱 Binary: platform-specific precompiled version\n📚 Installed: available in your R library\n🧠 In-Memory: actively loaded via library()\n\n\n\n\nUnderstanding these states helps you manage installation, sharing, and usage workflows."
  },
  {
    "objectID": "slides/summary_hh.html#transitioning-between-states",
    "href": "slides/summary_hh.html#transitioning-between-states",
    "title": "Short Course on R Tools",
    "section": "🔁 Transitioning Between States",
    "text": "🔁 Transitioning Between States"
  },
  {
    "objectID": "slides/summary_hh.html#package-development-flow",
    "href": "slides/summary_hh.html#package-development-flow",
    "title": "Short Course on R Tools",
    "section": "📦 Package Development Flow",
    "text": "📦 Package Development Flow\n\nCreate a package\n\nusethis::create_package(\"mypkg\")\n\n\nWrite functions inside R/\n\n\n\n\nDocument them with roxygen2 tags:\n\n#' Say Hello\n#' @export\nhello &lt;- function() {\n  print(\"Hello, world!\")\n}\n\n\n\nGenerate docs and namespace\n\ndevtools::document()"
  },
  {
    "objectID": "slides/summary_hh.html#install-and-share",
    "href": "slides/summary_hh.html#install-and-share",
    "title": "Short Course on R Tools",
    "section": "🚀 Install, and Share",
    "text": "🚀 Install, and Share\n\nBuild package:\n\ndevtools::build()\n\n\nInstall locally:\n\ndevtools::install()\n\n\n\nShare via GitHub:\n\nusethis::use_github()\n\n\n\nInstall from GitHub (for others):\n\nremotes::install_github(\"yourname/mypkg\")"
  },
  {
    "objectID": "slides/summary_hh.html#further-resources",
    "href": "slides/summary_hh.html#further-resources",
    "title": "Short Course on R Tools",
    "section": "📚 Further Resources",
    "text": "📚 Further Resources\n\n📖 R Packages (book): https://r-pkgs.org\n🧪 testthat: https://testthat.r-lib.org\n📦 devtools: https://devtools.r-lib.org\n🔧 usethis: https://usethis.r-lib.org"
  },
  {
    "objectID": "slides/summary_hh.html#submitting-to-cran",
    "href": "slides/summary_hh.html#submitting-to-cran",
    "title": "Short Course on R Tools",
    "section": "🚀 Submitting to CRAN",
    "text": "🚀 Submitting to CRAN\n\n\n📦 CRAN = Comprehensive R Archive Network\n\n🎯 Goal: Make your R package public, discoverable, and installable\n✔ Must pass R CMD check with:\n\n❌ No ERRORs\n⚠️ No WARNINGs\n📝 Minimal and justifiable NOTEs\n\n🧪 Simulate checks: rhub::check_for_cran()\n📤 Submit with: devtools::release()\n⏱️ Response in approx 1–3 days"
  },
  {
    "objectID": "slides/summary_hh.html#before-you-hit-release",
    "href": "slides/summary_hh.html#before-you-hit-release",
    "title": "Short Course on R Tools",
    "section": "🛠 Before You Hit “Release”",
    "text": "🛠 Before You Hit “Release”\n\n\nRun: devtools::check()\n✅ Double-check:\n\n📜 A valid LICENSE\n🆔 ORCID info in Authors@R\n🧪 Examples run &lt; 5 seconds\n📚 Clear documentation and vignettes\n📈 Version bump and a NEWS.md"
  },
  {
    "objectID": "slides/summary_hh.html#confirmation-email",
    "href": "slides/summary_hh.html#confirmation-email",
    "title": "Short Course on R Tools",
    "section": "📩 Confirmation Email",
    "text": "📩 Confirmation Email"
  },
  {
    "objectID": "slides/summary_hh.html#submission-confirmed-email",
    "href": "slides/summary_hh.html#submission-confirmed-email",
    "title": "Short Course on R Tools",
    "section": "📬 Submission Confirmed Email",
    "text": "📬 Submission Confirmed Email"
  },
  {
    "objectID": "slides/summary_hh.html#pending-manual-inspection-email",
    "href": "slides/summary_hh.html#pending-manual-inspection-email",
    "title": "Short Course on R Tools",
    "section": "⏳ Pending Manual Inspection Email",
    "text": "⏳ Pending Manual Inspection Email"
  },
  {
    "objectID": "slides/summary_hh.html#package-initially-accepted-email",
    "href": "slides/summary_hh.html#package-initially-accepted-email",
    "title": "Short Course on R Tools",
    "section": "✅ Package Initially Accepted Email",
    "text": "✅ Package Initially Accepted Email\n\n\n\n🎉 Good news!"
  },
  {
    "objectID": "slides/summary_hh.html#package-built-on-cran-email",
    "href": "slides/summary_hh.html#package-built-on-cran-email",
    "title": "Short Course on R Tools",
    "section": "📦 Package Built on CRAN Email",
    "text": "📦 Package Built on CRAN Email\n\n\n\n🧱 CRAN has built binaries for major platforms (Windows, …)."
  },
  {
    "objectID": "slides/summary_hh.html#cran-page-created",
    "href": "slides/summary_hh.html#cran-page-created",
    "title": "Short Course on R Tools",
    "section": "🌐 CRAN Page Created",
    "text": "🌐 CRAN Page Created\n\n\n🌍 Your package is now live! Searchable and installable via:\n\ninstall.packages(\"Rfssa\")"
  },
  {
    "objectID": "slides/summary_hh.html#why-use-git-github",
    "href": "slides/summary_hh.html#why-use-git-github",
    "title": "Short Course on R Tools",
    "section": "🌍 Why Use Git & GitHub?",
    "text": "🌍 Why Use Git & GitHub?\n\n\n🔁 Version Control: Track and manage changes in code\n🤝 Collaboration: Work with others without overwriting files\n🧪 Reproducibility: Restore older versions when bugs occur\n🔄 Open Source: Share your package with the world\n\n\n\n\n🧰 Git = Local tracking tool\n☁️ GitHub = Online hosting and teamwork platform"
  },
  {
    "objectID": "slides/summary_hh.html#git-github-from-rstudio",
    "href": "slides/summary_hh.html#git-github-from-rstudio",
    "title": "Short Course on R Tools",
    "section": "🧰 Git & GitHub from RStudio",
    "text": "🧰 Git & GitHub from RStudio\n✅ RStudio has built-in Git integration:\n\n\nGit tab for staging, committing, and pushing\n\n\n\n\nVisual diff and commit history\n\n\n\n\nPush to GitHub without leaving RStudio"
  },
  {
    "objectID": "slides/summary_hh.html#set-up-github-in-r",
    "href": "slides/summary_hh.html#set-up-github-in-r",
    "title": "Short Course on R Tools",
    "section": "🔧 Set Up GitHub in R",
    "text": "🔧 Set Up GitHub in R\n\n\n✅ Install Git (git-scm.com)\n\n\n\n\n🔑 Create Personal Access Token (PAT):\n\nusethis::create_github_token()\ngitcreds::gitcreds_set()\n\n\n\n🔗 Link your project to GitHub:\n\nusethis::use_github()\n\n🎉 Your RStudio project is now connected to GitHub!"
  },
  {
    "objectID": "slides/summary_hh.html#create-a-git-enabled-r-package-project",
    "href": "slides/summary_hh.html#create-a-git-enabled-r-package-project",
    "title": "Short Course on R Tools",
    "section": "📦 Create a Git-Enabled R Package Project",
    "text": "📦 Create a Git-Enabled R Package Project\n\nFile → New Project → New Directory → R Package\n\n\n\n✅ Check “Create a git repository”\n\n\n\n\nInside the project:\n\nusethis::use_git()\nusethis::use_github()\n\n\n\n📁 You now have a .git repo and a linked GitHub project!"
  },
  {
    "objectID": "slides/summary_hh.html#daily-git-workflow-in-rstudio",
    "href": "slides/summary_hh.html#daily-git-workflow-in-rstudio",
    "title": "Short Course on R Tools",
    "section": "🔁 Daily Git Workflow in RStudio",
    "text": "🔁 Daily Git Workflow in RStudio\n\n🎯 A typical work cycle for package developers:\n\n\n\n\n\nStep\nDescription\n\n\n\n\n✏️ Edit\nMake changes to .R or .Rmd files\n\n\n✅ Stage\nSelect files to track in Git tab\n\n\n💬 Commit\nSave with a message (e.g., “Fix bug”)\n\n\n🚀 Push\nSend to GitHub"
  },
  {
    "objectID": "slides/summary_hh.html#example-collaborative-workflow",
    "href": "slides/summary_hh.html#example-collaborative-workflow",
    "title": "Short Course on R Tools",
    "section": "🧪 Example: Collaborative Workflow",
    "text": "🧪 Example: Collaborative Workflow\n\n\nYou write a new function: plot_confidence()\n\n\n\n\nCommit message: \"Add CI plot to visual module\"\n\n\n\n\nPush to GitHub → colleague reviews & suggests changes"
  },
  {
    "objectID": "slides/summary_hh.html#github-for-package-development",
    "href": "slides/summary_hh.html#github-for-package-development",
    "title": "Short Course on R Tools",
    "section": "✅ GitHub for Package Development",
    "text": "✅ GitHub for Package Development\n\n\n📦 Host your package openly\n🧪 Enable collaborative testing & documentation\n📤 Submit to CRAN from a clean version-controlled repo\n🔁 Great for long-term maintenance and open-source visibility\n\n\n\n\n🎯 If you publish your package, link the GitHub repo in DESCRIPTION"
  },
  {
    "objectID": "slides/summary_hh.html#resources",
    "href": "slides/summary_hh.html#resources",
    "title": "Short Course on R Tools",
    "section": "📚 Resources",
    "text": "📚 Resources\n\n📘 Happy Git with R: https://happygitwithr.com\n🔧 usethis: https://usethis.r-lib.org\n🧪 gitcreds: https://github.com/r-lib/gitcreds\n📂 GitHub Docs: https://docs.github.com/"
  },
  {
    "objectID": "slides/Topic5_hh.html#key-packages",
    "href": "slides/Topic5_hh.html#key-packages",
    "title": "Short Course on R Tools",
    "section": "📦 Key Packages",
    "text": "📦 Key Packages\n\n\ndevtools: Simplifies package development by wrapping complex workflows into easy commands\nroxygen2: Generates documentation from special comments in your function code\ntestthat: Provides a framework for unit testing and ensures your functions work correctly and safely over time\nknitr: Powers dynamic report generation and vignette building that integrates code, results, and text using R Markdown\n\n\n\n\n💡 These tools help automate, test, document, and share your package like a pro."
  },
  {
    "objectID": "slides/Topic5_hh.html#directory-layout",
    "href": "slides/Topic5_hh.html#directory-layout",
    "title": "Short Course on R Tools",
    "section": "🧩 Directory layout",
    "text": "🧩 Directory layout\n  mypkg/\n  ├── DESCRIPTION         # Package metadata\n  ├── NAMESPACE           # Exported functions & imports\n  ├── R/                  # Your R functions\n  └── man/                # Auto-generated documentation\n\n\n💡 Tip: Many folders in an R package are optional and included as needed."
  },
  {
    "objectID": "slides/Topic5_hh.html#directory-layout-1",
    "href": "slides/Topic5_hh.html#directory-layout-1",
    "title": "Short Course on R Tools",
    "section": "🧩 Directory layout",
    "text": "🧩 Directory layout\n  mypkg/\n  ├── DESCRIPTION         # Package metadata\n  ├── NAMESPACE           # Exported functions & imports\n  ├── R/                  # Your R functions\n  ├── man/                # Auto-generated documentation\n  ├── tests/              # Unit tests with testthat\n  ├── vignettes/          # Long-form documentation (Rmd)\n  ├── data/               # Data sets (.rda files)\n  └── inst/               # Installed files (e.g., app/, extdata/)"
  },
  {
    "objectID": "slides/Topic5_hh.html#source-package",
    "href": "slides/Topic5_hh.html#source-package",
    "title": "Short Course on R Tools",
    "section": "🗂️ Source Package",
    "text": "🗂️ Source Package\nA source package is just a folder with a specific structure:\n\nDESCRIPTION file\n\nR/ folder with .R files\n\nOptional: man/, tests/, vignettes/\n\n\n\nIt’s editable and human-readable — your starting point for development."
  },
  {
    "objectID": "slides/Topic5_hh.html#bundled-package",
    "href": "slides/Topic5_hh.html#bundled-package",
    "title": "Short Course on R Tools",
    "section": "📦 Bundled Package",
    "text": "📦 Bundled Package\nA bundled package is a compressed .tar.gz file created from a source package.\n\nCommonly called a source tarball\nCreated using devtools::build()\nPlatform-independent format for distribution\n\n\n\nIt acts as a transportable unit — not directly usable until installed."
  },
  {
    "objectID": "slides/Topic5_hh.html#binary-package",
    "href": "slides/Topic5_hh.html#binary-package",
    "title": "Short Course on R Tools",
    "section": "🧱 Binary Package",
    "text": "🧱 Binary Package\nA binary package is a platform-specific compiled package:\n\nWindows: .zip\nmacOS: .tgz\nCreated using devtools::build(binary = TRUE)\n\n\n\nIdeal for users without development tools — typically distributed by CRAN."
  },
  {
    "objectID": "slides/Topic5_hh.html#installed-package",
    "href": "slides/Topic5_hh.html#installed-package",
    "title": "Short Course on R Tools",
    "section": "📚 Installed Package",
    "text": "📚 Installed Package\nAn installed package is one that’s been unpacked and placed into a library folder.\n\nNo longer a single file\nReady to be loaded into memory\n\n\n\ninstall.packages() or devtools::install_*() bring packages into this state."
  },
  {
    "objectID": "slides/Topic5_hh.html#in-memory-package",
    "href": "slides/Topic5_hh.html#in-memory-package",
    "title": "Short Course on R Tools",
    "section": "🧠 In-Memory Package",
    "text": "🧠 In-Memory Package\nAn in-memory package is an installed package that’s been loaded into the R session.\n\nUse library(pkgname) to load\nMakes all exported functions and objects available\n\n\n\nUse library() to see loaded packages."
  },
  {
    "objectID": "slides/Topic5_hh.html#transitioning-between-states",
    "href": "slides/Topic5_hh.html#transitioning-between-states",
    "title": "Short Course on R Tools",
    "section": "🔁 Transitioning Between States",
    "text": "🔁 Transitioning Between States"
  },
  {
    "objectID": "slides/Topic5_hh.html#formal-naming-rules",
    "href": "slides/Topic5_hh.html#formal-naming-rules",
    "title": "Short Course on R Tools",
    "section": "📛 Formal Naming Rules",
    "text": "📛 Formal Naming Rules\nA valid R package name must:\n\n\nContain only letters, numbers, and periods (.)\nStart with a letter\nNot end with a period\n\n\n\n❌ You cannot use:\n\nHyphens -\nUnderscores _"
  },
  {
    "objectID": "slides/Topic5_hh.html#naming-tips-for-shared-packages",
    "href": "slides/Topic5_hh.html#naming-tips-for-shared-packages",
    "title": "Short Course on R Tools",
    "section": "🔍 Naming Tips for Shared Packages",
    "text": "🔍 Naming Tips for Shared Packages\nIf you plan to share your package:\n\n\n✅ Choose a unique name that’s easy to Google\n\n🔎 Avoid names already on CRAN or Bioconductor\n⌨️ Stick to all lowercase — e.g., avoid RGTK2 vs RGtk2\n🗣️ Prefer pronounceable names — easier to talk and think about"
  },
  {
    "objectID": "slides/Topic5_hh.html#naming-patterns-and-examples",
    "href": "slides/Topic5_hh.html#naming-patterns-and-examples",
    "title": "Short Course on R Tools",
    "section": "🧠 Naming Patterns and Examples",
    "text": "🧠 Naming Patterns and Examples\nEvocative Names:\n\nlubridate → makes dates easier\n\nrvest → for web scraping (like “harvest”)\n\nr2d3 → tools for D3 visualizations\n\nforcats → anagram of factors\n\n\n\nAbbreviations\n\nRcpp → R + C++\nbrms → Bayesian Regression Models using Stan"
  },
  {
    "objectID": "slides/Topic5_hh.html#creating-your-package",
    "href": "slides/Topic5_hh.html#creating-your-package",
    "title": "Short Course on R Tools",
    "section": "🛠️ Creating Your Package",
    "text": "🛠️ Creating Your Package\nOnce you have a name, create the package using either:\n\n\nusethis::create_package(\"mypkg\")\n\nRStudio UI:\nFile → New Project → New Directory → R Package\n\n\n\n👉 Both options run the same function under the hood."
  },
  {
    "objectID": "slides/Topic5_hh.html#what-gets-created",
    "href": "slides/Topic5_hh.html#what-gets-created",
    "title": "Short Course on R Tools",
    "section": "📦 What Gets Created?",
    "text": "📦 What Gets Created?\n\n\n\n\nR/ folder → for your function code\n\nDESCRIPTION file → metadata\n\nNAMESPACE file → exports/imports\n\nmypkg.Rproj → RStudio project file\n\n.Rbuildignore, .gitignore → build and Git helpers"
  },
  {
    "objectID": "slides/Topic5_hh.html#description-namespace",
    "href": "slides/Topic5_hh.html#description-namespace",
    "title": "Short Course on R Tools",
    "section": "DESCRIPTION & NAMESPACE",
    "text": "DESCRIPTION & NAMESPACE\nTwo essential files in every R package:\n\n\n📄 DESCRIPTION: Metadata about your package (who, what, dependencies)\n\n📦 NAMESPACE: Controls what functions are exported and what is imported"
  },
  {
    "objectID": "slides/Topic5_hh.html#description-file",
    "href": "slides/Topic5_hh.html#description-file",
    "title": "Short Course on R Tools",
    "section": "📄 DESCRIPTION File",
    "text": "📄 DESCRIPTION File\nThe DESCRIPTION file provides overall metadata about your package:\n\n\nPackage name and version\n\nAuthor and maintainer info\n\nDependencies (Imports, Suggests)\n\nDescription and license\n\nBuild-related metadata"
  },
  {
    "objectID": "slides/Topic5_hh.html#sample-description-file",
    "href": "slides/Topic5_hh.html#sample-description-file",
    "title": "Short Course on R Tools",
    "section": "🧾 Sample DESCRIPTION File",
    "text": "🧾 Sample DESCRIPTION File\nPackage: Rfssa\nTitle: Functional Singular Spectrum Analysis\nVersion: 3.1.0\nAuthors@R: c(\n  person(\"Hossein\", \"Haghbin\", email = \"haghbin@pgu.ac.ir\", \n         role = c(\"aut\", \"cre\"), \n         comment = c(ORCID = \"0000-0001-8416-2354\")),\n  person(\"Mehdi\", \"Maadooliat\", email = \"mehdi.maadooliat@mu.edu\", \n         role = \"aut\", \n         comment = c(ORCID = \"0000-0002-5408-2676\"))\n)\nDescription: Methods and tools for implementing functional \n  singular spectrum analysis and related techniques.\nLicense: GPL-3\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.3.2\nDepends: R (&gt;= 4.0.0)"
  },
  {
    "objectID": "slides/Topic5_hh.html#more-details-description",
    "href": "slides/Topic5_hh.html#more-details-description",
    "title": "Short Course on R Tools",
    "section": "More Details DESCRIPTION",
    "text": "More Details DESCRIPTION\nPackage: Rfssa\nTitle: Functional Singular Spectrum Analysis\nVersion: 3.1.0\nAuthors@R: c(\n    person(\"Hossein\", \"Haghbin\", email = \"haghbin@pgu.ac.ir\", role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0001-8416-2354\")),\n    person(\"Mehdi\", \"Maadooliat\", email = \"mehdi.maadooliat@mu.edu\", role = \"aut\", comment = c(ORCID = \"0000-0002-5408-2676\"))\n    )\nMaintainer: Hossein Haghbin &lt;haghbin@pgu.ac.ir&gt;\nURL: https://github.com/haghbinh/Rfssa\nDescription: Methods and tools for implementing functional singular spectrum analysis and related techniques.\nLicense: GPL-3\nEncoding: UTF-8\nLazyLoad: true\nRoxygenNote: 7.2.3\nImports: Rcpp,fda,lattice,plotly\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.3.2\nLinkingTo: Rcpp, RcppArmadillo, RcppEigen,\nSuggests: \n    knitr\nDepends: R (&gt;= 4.0.0)"
  },
  {
    "objectID": "slides/Topic5_hh.html#title-vs.-description",
    "href": "slides/Topic5_hh.html#title-vs.-description",
    "title": "Short Course on R Tools",
    "section": "📝 Title vs. Description",
    "text": "📝 Title vs. Description\nTitle\n\n\nOne line\n\nNo punctuation or markup\n\nCapitalize like a title\n\nKeep under ~65 characters\n\n\n\nDescription\n\n\nOne paragraph, plain text\n\nMultiple sentences OK\n\nShould describe what the package does"
  },
  {
    "objectID": "slides/Topic5_hh.html#example-from-ggplot2",
    "href": "slides/Topic5_hh.html#example-from-ggplot2",
    "title": "Short Course on R Tools",
    "section": "🧪 Example from ggplot2:",
    "text": "🧪 Example from ggplot2:\nTitle: Create Elegant Data Visualisations Using the Grammar of Graphics\nDescription: A system for 'declaratively' creating graphics,\n  based on \"The Grammar of Graphics\". You provide the data,\n  tell 'ggplot2' how to map variables to aesthetics, what\n  graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "slides/Topic5_hh.html#imports-vs.-suggests",
    "href": "slides/Topic5_hh.html#imports-vs.-suggests",
    "title": "Short Course on R Tools",
    "section": "📦 Imports vs. Suggests",
    "text": "📦 Imports vs. Suggests\nImports\n\n\nPackages required at runtime\nAutomatically installed with your package\nNeeded for core functionality\n\n\n\nSuggests\n\n\nOptional or development-time dependencies\nUsed in examples, tests, or vignettes\nNot required to run the core package\n\n\n\n\nUse usethis::use_package(\"pkg\", type = \"Imports\") to manage these easily."
  },
  {
    "objectID": "slides/Topic5_hh.html#namespace-file",
    "href": "slides/Topic5_hh.html#namespace-file",
    "title": "Short Course on R Tools",
    "section": "📂 NAMESPACE File",
    "text": "📂 NAMESPACE File\nThe NAMESPACE file defines the interface of your package.\nIt controls:\n\n\nWhat functions your package exports\nWhat functions it imports from other packages\nS3/S4 method registrations (if needed)\n\n\n\n\nThis file is auto-generated by roxygen2, so you typically don’t edit it by hand."
  },
  {
    "objectID": "slides/Topic5_hh.html#example-namespace-file",
    "href": "slides/Topic5_hh.html#example-namespace-file",
    "title": "Short Course on R Tools",
    "section": "🧾 Example: NAMESPACE File",
    "text": "🧾 Example: NAMESPACE File\n# Generated by roxygen2: do not edit by hand\nS3method(\"*\", funts)\nexport(as.funts)\nimport(shiny)\nimportFrom(ggplot2, ggplot)\n\n\nexport() — makes a function available to users\nimport() — brings in all exported objects from a package\nimportFrom() — imports specific functions\nS3method() — registers an S3 method"
  },
  {
    "objectID": "slides/Topic5_hh.html#how-to-populate-namespace",
    "href": "slides/Topic5_hh.html#how-to-populate-namespace",
    "title": "Short Course on R Tools",
    "section": "✍️ How to Populate NAMESPACE",
    "text": "✍️ How to Populate NAMESPACE\nUse roxygen2 tags in your .R files:\n#' Convert object to funts class\n#'\n#' @export\nas.funts &lt;- function(x) { ... }\n\n#' @import shiny\n#' @importFrom ggplot2 ggplot\nmy_app &lt;- function() {\n  ...\n}"
  },
  {
    "objectID": "slides/Topic5_hh.html#code-placement",
    "href": "slides/Topic5_hh.html#code-placement",
    "title": "Short Course on R Tools",
    "section": "📂 Code Placement",
    "text": "📂 Code Placement\nAll your functions go in the R/ folder.\nmypkg/\n├── R/\n│   ├── my_function.R\n│   └── helpers.R\nEach .R file can contain one or more functions."
  },
  {
    "objectID": "slides/Topic5_hh.html#documenting-functions-with-roxygen2",
    "href": "slides/Topic5_hh.html#documenting-functions-with-roxygen2",
    "title": "Short Course on R Tools",
    "section": "📝 Documenting Functions with Roxygen2",
    "text": "📝 Documenting Functions with Roxygen2\nUse special comments starting with #' to write function documentation:\n#' Sum a numeric vector\n#'\n#' @param x Numeric vector\n#' @return Numeric sum of x\n#' @examples\n#' my_function(1:5)\nmy_function &lt;- function(x) sum(x)\nThis will generate help files in the man/ folder."
  },
  {
    "objectID": "slides/Topic5_hh.html#generate-documentation",
    "href": "slides/Topic5_hh.html#generate-documentation",
    "title": "Short Course on R Tools",
    "section": "⚙️ Generate Documentation",
    "text": "⚙️ Generate Documentation\nAfter writing your function and roxygen2 comments, run:\ndevtools::document()\nThis will:\n\n\nUpdate the NAMESPACE file\nCreate .Rd help files in the man/ folder\n\n\n\n💡 You can also press Ctrl+Shift+D in RStudio."
  },
  {
    "objectID": "slides/Topic5_hh.html#step-1-create-your-package",
    "href": "slides/Topic5_hh.html#step-1-create-your-package",
    "title": "Short Course on R Tools",
    "section": "🧱 Step 1: Create Your Package",
    "text": "🧱 Step 1: Create Your Package\nUse usethis to create a new package directory:\nusethis::create_package(\"minipkg\")\nThis creates:\n\n\nR/, DESCRIPTION, NAMESPACE\n.Rproj, .gitignore, .Rbuildignore\nOpens new RStudio project for your package"
  },
  {
    "objectID": "slides/Topic5_hh.html#add-a-dataset",
    "href": "slides/Topic5_hh.html#add-a-dataset",
    "title": "Short Course on R Tools",
    "section": "2️⃣ Add a Dataset",
    "text": "2️⃣ Add a Dataset\nLet’s include a built-in dataset (mtcars) for simplicity:\nusethis::use_data(mtcars, overwrite = TRUE)\nThis creates a data/mtcars.rda file — accessible via minipkg::mtcars."
  },
  {
    "objectID": "slides/Topic5_hh.html#create-a-function",
    "href": "slides/Topic5_hh.html#create-a-function",
    "title": "Short Course on R Tools",
    "section": "3️⃣ Create a Function",
    "text": "3️⃣ Create a Function\nCreate a new file: R/summary_stats.R\n#' Compute Summary Statistics\n#'\n#' Returns mean and standard deviation for each numeric column.\n#'\n#' @param data A data frame with numeric columns\n#' @return A data frame with `mean` and `sd` per column\n#' @examples\n#' summary_stats(mtcars)\n#' @export\nsummary_stats &lt;- function(data) {\n  numeric_data &lt;- data[sapply(data, is.numeric)]\n  data.frame(\n    mean = sapply(numeric_data, mean),\n    sd = sapply(numeric_data, sd)\n  )\n}"
  },
  {
    "objectID": "slides/Topic5_hh.html#document-the-function",
    "href": "slides/Topic5_hh.html#document-the-function",
    "title": "Short Course on R Tools",
    "section": "4️⃣ Document the Function",
    "text": "4️⃣ Document the Function\nRun the following command to generate docs:\ndevtools::document()\nThis will:\n\n\nAdd export(summary_stats) to your NAMESPACE\nCreate man/summary_stats.Rd"
  },
  {
    "objectID": "slides/Topic5_hh.html#load-and-test-the-package",
    "href": "slides/Topic5_hh.html#load-and-test-the-package",
    "title": "Short Course on R Tools",
    "section": "5️⃣ Load and Test the Package",
    "text": "5️⃣ Load and Test the Package\nIn the console:\ndevtools::load_all()\n\nThen test the function:\nsummary_stats(mtcars)\n\n\nYou should see:\n                mean         sd\nmpg        20.090625  6.0269481\ncyl         6.187500  1.7859216\ndisp      230.721875 123.9386938"
  },
  {
    "objectID": "slides/Topic5_hh.html#build-and-install-the-package",
    "href": "slides/Topic5_hh.html#build-and-install-the-package",
    "title": "Short Course on R Tools",
    "section": "6️⃣ Build and Install the Package",
    "text": "6️⃣ Build and Install the Package\nBuild the package locally:\ndevtools::build()\n\nInstall it:\ndevtools::install()\n\n\nNow you can use it like any other package:\nlibrary(minipkg)\nsummary_stats(mtcars)"
  },
  {
    "objectID": "slides/Topic5_hh.html#helpsummary_stats",
    "href": "slides/Topic5_hh.html#helpsummary_stats",
    "title": "Short Course on R Tools",
    "section": "🚀 help(\"summary_stats\")",
    "text": "🚀 help(\"summary_stats\")"
  },
  {
    "objectID": "slides/Topic2.html#structure-of-a-shiny-app-1",
    "href": "slides/Topic2.html#structure-of-a-shiny-app-1",
    "title": "Short Course on R Tools",
    "section": "Structure of a Shiny App",
    "text": "Structure of a Shiny App\n\n# app.R single-file app\nlibrary(shiny)\nui &lt;- fluidPage(\n  titlePanel(\"Hello Shiny\"),\n  sidebarLayout(\n    sidebarPanel(sliderInput(\"obs\", \"Observations:\", 1, 100, 50)),\n    mainPanel(plotOutput(\"distPlot\"))\n  )\n)\n\nserver &lt;- function(input, output) {\n  output$distPlot &lt;- renderPlot({\n    hist(rnorm(input$obs))\n  })\n}\n\nshinyApp(ui, server)\n\n\nui defines layout and inputs/outputs\nserver contains R code & reactivity",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#structure-of-a-shiny-app-2",
    "href": "slides/Topic2.html#structure-of-a-shiny-app-2",
    "title": "Short Course on R Tools",
    "section": "Structure of a Shiny App",
    "text": "Structure of a Shiny App\nShiny apps come in two parts:\n\n\n\nUI\n\nDefines the layout and appearance.\nContains elements such as:\n\nlayout structures (sidebars)\ninputs (text boxes, sliders, buttons)\noutputs (plots, tables)\n\n\n\n\nServer\n\nPerforms calculations.\nContains the logic to respond to user inputs, and update outputs.\nCommunicates with the UI to dynamically render outputs.",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#exercise",
    "href": "slides/Topic2.html#exercise",
    "title": "Short Course on R Tools",
    "section": "Exercise",
    "text": "Exercise\n\n\n\n−+\n05:00\n\n\n\n\nOpen up your IDE of choice.\nMake sure you have the {shiny} package installed.\nCreate an app.R file.\nAdd ui and server elements, as well as shiny::shinyApp(ui, server).\nCheck it works.",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#shinyapps-gallery-1",
    "href": "slides/Topic2.html#shinyapps-gallery-1",
    "title": "Short Course on R Tools",
    "section": "Shinyapps Gallery",
    "text": "Shinyapps Gallery",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#widgets---input",
    "href": "slides/Topic2.html#widgets---input",
    "title": "Short Course on R Tools",
    "section": "Widgets - Input",
    "text": "Widgets - Input",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#widgets---output-table",
    "href": "slides/Topic2.html#widgets---output-table",
    "title": "Short Course on R Tools",
    "section": "Widgets - Output Table",
    "text": "Widgets - Output Table\n\n\n\n🔗 &lt;/&gt; VIEW CODE",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#reactivity-demo",
    "href": "slides/Topic2.html#reactivity-demo",
    "title": "Short Course on R Tools",
    "section": "Reactivity Demo",
    "text": "Reactivity Demo",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#isolate-demo",
    "href": "slides/Topic2.html#isolate-demo",
    "title": "Short Course on R Tools",
    "section": "Isolate Demo",
    "text": "Isolate Demo",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#observers-demo",
    "href": "slides/Topic2.html#observers-demo",
    "title": "Short Course on R Tools",
    "section": "Observers Demo",
    "text": "Observers Demo",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#shinylive-deployment",
    "href": "slides/Topic2.html#shinylive-deployment",
    "title": "Short Course on R Tools",
    "section": "Shinylive deployment",
    "text": "Shinylive deployment",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic2.html#shinylive-deployment-1",
    "href": "slides/Topic2.html#shinylive-deployment-1",
    "title": "Short Course on R Tools",
    "section": "Shinylive deployment",
    "text": "Shinylive deployment\nSee posit-dev.github.io/r-shinylive.\n\nThe {shinylive} package converts a standard shiny app into a shinylive app:\ninstall.packages(\"shinylive\")\nAssuming your app.R file is in a folder called app:\nshinylive::export(\"app\", \"site\")\nYou can then use the files in the site folder to deploy it as a normal website.\n*not all R packages are available for shinylive.\n**initial load time is still quite slow.",
    "crumbs": [
      "Slides",
      "Shiny"
    ]
  },
  {
    "objectID": "slides/Topic6_hh.html#what-happens-after-submission",
    "href": "slides/Topic6_hh.html#what-happens-after-submission",
    "title": "Short Course on R Tools",
    "section": "📬 What Happens After Submission?",
    "text": "📬 What Happens After Submission?\n\nYou’ll get an automated confirmation email\nWithin ~24–72 hours, a CRAN maintainer will review your package\nThey may:\n\nAccept it immediately ✅\nRequest fixes or clarifications ✍️\nReject with detailed reasons ❌"
  },
  {
    "objectID": "slides/Topic6_hh.html#updating-a-cran-package",
    "href": "slides/Topic6_hh.html#updating-a-cran-package",
    "title": "Short Course on R Tools",
    "section": "🔄 Updating a CRAN Package",
    "text": "🔄 Updating a CRAN Package\nTo submit an update:\n\n\nBump the version (e.g., from 1.0.0 → 1.0.1)\nAdd a clear NEWS.md entry\nEnsure compatibility with current R version and dependencies\nFollow the same submission process\n\n\n\n📌 You can only submit once every 1–2 weeks (per package)."
  },
  {
    "objectID": "slides/Topic6_hh.html#git-github-basics",
    "href": "slides/Topic6_hh.html#git-github-basics",
    "title": "Short Course on R Tools",
    "section": "🐙 Git & GitHub Basics",
    "text": "🐙 Git & GitHub Basics\n🔹 Git: Version control system for your local project\n🔹 GitHub: Cloud platform to share and collaborate\n📝 Key Terms:\n\nCommit = Savepoint\nPush/Pull = Send/Receive changes\nRepo = Project folder\n\n📦 Example:\n\nYou push your R package to GitHub, allowing your coauthor to edit documentation and submit a pull request."
  },
  {
    "objectID": "slides/Topic6_hh.html#installing-git",
    "href": "slides/Topic6_hh.html#installing-git",
    "title": "Short Course on R Tools",
    "section": "📦 Installing Git",
    "text": "📦 Installing Git\n🔹 Go to git-scm.com\nChoose your operating system:\n\nWindows: Download .exe and install with default options\nmacOS: Install via Homebrew brew install git or Git installer\nLinux: Use package manager, e.g.:\n\n  sudo apt install git"
  },
  {
    "objectID": "slides/Topic6_hh.html#verifying-git-installation",
    "href": "slides/Topic6_hh.html#verifying-git-installation",
    "title": "Short Course on R Tools",
    "section": "🧪 Verifying Git Installation",
    "text": "🧪 Verifying Git Installation\n🧪 Run this in your Terminal (or Command Prompt):\ngit --version\n✅ You should see something like:\ngit version 2.43.0\n💡 If this works, Git is installed correctly!"
  },
  {
    "objectID": "slides/Topic6_hh.html#configuring-git-identity",
    "href": "slides/Topic6_hh.html#configuring-git-identity",
    "title": "Short Course on R Tools",
    "section": "🔑 Configuring Git Identity",
    "text": "🔑 Configuring Git Identity\n🔧 Set your global Git identity:\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n✅ To check the name or email currently set in Git, use these commands:\ngit config --global user.name \ngit config --global user.email"
  },
  {
    "objectID": "slides/Topic6_hh.html#connect-github-to-r-create-pat",
    "href": "slides/Topic6_hh.html#connect-github-to-r-create-pat",
    "title": "Short Course on R Tools",
    "section": "🧭 Connect GitHub to R (Create PAT)",
    "text": "🧭 Connect GitHub to R (Create PAT)\n\nIn R:\n\nusethis::create_github_token()\n\nGitHub will open — generate a Personal Access Token (PAT)\nCopy the token (only shown once!)\nBack in R:\n\ngitcreds::gitcreds_set()\nPaste your token when prompted.\n✅ You’ve now authenticated GitHub from R!"
  },
  {
    "objectID": "slides/Topic6_hh.html#check-setup",
    "href": "slides/Topic6_hh.html#check-setup",
    "title": "Short Course on R Tools",
    "section": "🧪 Check Setup",
    "text": "🧪 Check Setup\nUse this helpful diagnostic tool:\nusethis::git_sitrep()\n💡 This tells you:\n\nWhether Git is installed\nWhether GitHub is connected\nIf PAT is stored"
  },
  {
    "objectID": "slides/Topic6_hh.html#creating-a-new-git-enabled-project",
    "href": "slides/Topic6_hh.html#creating-a-new-git-enabled-project",
    "title": "Short Course on R Tools",
    "section": "📁 Creating a New Git-Enabled Project",
    "text": "📁 Creating a New Git-Enabled Project\nIn RStudio:\n\nFile → New Project\nChoose:\n\n“New Directory” → “R Package” (or “New Project”)\n\nCheck the box:\n\n✅ “Create a git repository”\n\nFinish project setup\n\n📁 A .git folder is created — this is a Git repo!"
  },
  {
    "objectID": "slides/Topic6_hh.html#connect-to-github",
    "href": "slides/Topic6_hh.html#connect-to-github",
    "title": "Short Course on R Tools",
    "section": "🌐 Connect to GitHub",
    "text": "🌐 Connect to GitHub\nRun this to create and link a GitHub repo:\nusethis::use_github()\nThis will:\n\nPush your project to GitHub\nOpen the new repo in your browser\n\n\n💡 You can now push/pull changes from RStudio Git tab"
  },
  {
    "objectID": "slides/Topic6_hh.html#common-git-workflows",
    "href": "slides/Topic6_hh.html#common-git-workflows",
    "title": "Short Course on R Tools",
    "section": "🔄 Common Git Workflows",
    "text": "🔄 Common Git Workflows\n🎯 Daily workflow steps:\n\nEdit R/stats_module.R\nStage → Commit → Push\n\n💻 In RStudio Git tab:\n\nStage: click checkbox\nCommit: type a message\nPush: upload to GitHub\n\n🔁 Example:\n\nCommit message: “Add confidence interval to mean_plot()”"
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Motivating Talk\nStat Calculator\nDistribution Calculator\nRStudio\n🔗 Rfssa: An R Package for Functional SSA\n🔗 StatCalc(JAMM)\n🔗 DistCalc\n🔗 on dna |\n\n\nAdvanced Texbooks\n🔗 Advanced R by Hadley Wickham\n🔗 R Package\n🔗 Quarto\n🔗 R Markdown\n🔗 ggplot2: Elegant Graphics for Data Analysis\n🔗 Fundamentals of Data Visualization\n🔗 Data Visualization: A Practical Introduction\n🔗 R for Data Science\n\n\nSome Package documentation\n🔗 OOP-R6: r6.r-lib.org\n🔗 shiny: shiny.posit.co\n🔗 Rcpp: www.rcpp.org\n🔗 reticulate: rstudio.github.io/reticulate\n🔗 devtools: devtools.r-lib.org\n🔗 GitHub: happygitwithr.com\n🔗 CRAN: cran.r-project.org\n🔗 keras: keras3.posit.co",
    "crumbs": [
      "Miscellaneous",
      "Useful links"
    ]
  },
  {
    "objectID": "misc/cheatsheets.html",
    "href": "misc/cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://posit.co/resources/cheatsheets. We haven’t covered every function and functionality listed on them, but you might still find them useful as references.",
    "crumbs": [
      "Miscellaneous",
      "Cheatsheets"
    ]
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "Course overview",
    "section": "",
    "text": "This is the homepage for Short Course on R Tools (SCoRT) by Dr. Mehdi Maadooliat and Dr. Hossein Haghbin. All course materials will be posted on this site.\nYou can find the course syllabus here and the course schedule here.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#class-meetings",
    "href": "course-overview.html#class-meetings",
    "title": "Course overview",
    "section": "Class meetings",
    "text": "Class meetings\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nMS. Teams\nTue & Thur 11:00 am - 12:15 pm\n\n\nOffice Hours\nMS. Teams\nTue & Thur 12:15 - 1:30 pm",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "hands-on/HO2.html",
    "href": "hands-on/HO2.html",
    "title": "Hands-on: k-NN Regression in Shiny",
    "section": "",
    "text": "In this 30 min session you will:\n\nLaunch and explore the k-NN Shiny app\nAdjust k, select backend (R vs C++)\nObserve train/test performance and parity plots",
    "crumbs": [
      "Hands-on / HW",
      "Shiny"
    ]
  },
  {
    "objectID": "hands-on/HO2.html#overview",
    "href": "hands-on/HO2.html#overview",
    "title": "Hands-on: k-NN Regression in Shiny",
    "section": "",
    "text": "In this 30 min session you will:\n\nLaunch and explore the k-NN Shiny app\nAdjust k, select backend (R vs C++)\nObserve train/test performance and parity plots",
    "crumbs": [
      "Hands-on / HW",
      "Shiny"
    ]
  },
  {
    "objectID": "hands-on/HO2.html#setup",
    "href": "hands-on/HO2.html#setup",
    "title": "Hands-on: k-NN Regression in Shiny",
    "section": "Setup",
    "text": "Setup\nDownload the Shiny app:\ncurl -O https://raw.githubusercontent.com/mmadoliat/WSoRT/refs/heads/main/R/app.R",
    "crumbs": [
      "Hands-on / HW",
      "Shiny"
    ]
  },
  {
    "objectID": "hands-on/HO2.html#launch-the-app",
    "href": "hands-on/HO2.html#launch-the-app",
    "title": "Hands-on: k-NN Regression in Shiny",
    "section": "Launch the App",
    "text": "Launch the App\n# Run the Shiny application\nshiny::runApp('app.R')",
    "crumbs": [
      "Hands-on / HW",
      "Shiny"
    ]
  },
  {
    "objectID": "hands-on/HO2.html#tasks",
    "href": "hands-on/HO2.html#tasks",
    "title": "Hands-on: k-NN Regression in Shiny",
    "section": "Tasks",
    "text": "Tasks\n\nChange the train/test split ratio in make_split() (e.g. 80/20).\nAdd a slider input for the split ratio in ui and update server logic.\nExtend the performance panel to show Mean Absolute Error (MAE).",
    "crumbs": [
      "Hands-on / HW",
      "Shiny"
    ]
  },
  {
    "objectID": "hands-on/HO1.html",
    "href": "hands-on/HO1.html",
    "title": "Hands-on: k-NN Regression with S3 OOP",
    "section": "",
    "text": "In this 30 min session you will:\n\nLoad and inspect the knn_s3 and knn_s3_formula scripts\nFit k-NN regression models using S3\nUse print(), summary(), fitted(), predict(), anova()",
    "crumbs": [
      "Hands-on / HW",
      "OOP in R"
    ]
  },
  {
    "objectID": "hands-on/HO1.html#overview",
    "href": "hands-on/HO1.html#overview",
    "title": "Hands-on: k-NN Regression with S3 OOP",
    "section": "",
    "text": "In this 30 min session you will:\n\nLoad and inspect the knn_s3 and knn_s3_formula scripts\nFit k-NN regression models using S3\nUse print(), summary(), fitted(), predict(), anova()",
    "crumbs": [
      "Hands-on / HW",
      "OOP in R"
    ]
  },
  {
    "objectID": "hands-on/HO1.html#setup",
    "href": "hands-on/HO1.html#setup",
    "title": "Hands-on: k-NN Regression with S3 OOP",
    "section": "Setup",
    "text": "Setup\nDownload the scripts:\ncurl -O https://raw.githubusercontent.com/mmadoliat/WSoRT/refs/heads/main/R/knn_s3.R\ncurl -O https://raw.githubusercontent.com/mmadoliat/WSoRT/refs/heads/main/R/knn_s3_formula.R\nSource them in your R console:\nsource(\"knn_s3.R\")\nsource(\"knn_s3_formula.R\")",
    "crumbs": [
      "Hands-on / HW",
      "OOP in R"
    ]
  },
  {
    "objectID": "hands-on/HO1.html#example-code",
    "href": "hands-on/HO1.html#example-code",
    "title": "Hands-on: k-NN Regression with S3 OOP",
    "section": "Example Code",
    "text": "Example Code\n# Fit two models\nmod5  &lt;- knn_s3(mpg ~ disp + hp + wt, mtcars, k = 5)\nmod10 &lt;- knn_s3(mpg ~ disp + hp + wt, mtcars, k = 10)\n\n# Inspect models\nprint(mod5)\nsummary(mod5)\nfitted(mod5)[1:5]\n\n# Compare models\nanova(mod5, mod10)",
    "crumbs": [
      "Hands-on / HW",
      "OOP in R"
    ]
  },
  {
    "objectID": "hands-on/HO1.html#tasks",
    "href": "hands-on/HO1.html#tasks",
    "title": "Hands-on: k-NN Regression with S3 OOP",
    "section": "Tasks",
    "text": "Tasks\n\nVary k: change k to 3 and 8, then re-run summary().\nBackend swap: use predict(mod5, head(mtcars), method=\"R\") and compare.\nNew predictor: fit a model with mpg ~ cyl + gear and compare with the first via anova().\n\n\nGood luck!",
    "crumbs": [
      "Hands-on / HW",
      "OOP in R"
    ]
  }
]